// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/streetview/publish/v1/resources.proto

package com.google.geo.ugc.streetview.publish.v1;

public final class StreetViewPublishResources {
  private StreetViewPublishResources() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public interface UploadRefOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.UploadRef)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Required. An upload reference should be unique for each user. It follows
     * the form:
     * "https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}"
     * </pre>
     *
     * <code>string upload_url = 1;</code>
     */
    java.lang.String getUploadUrl();
    /**
     *
     *
     * <pre>
     * Required. An upload reference should be unique for each user. It follows
     * the form:
     * "https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}"
     * </pre>
     *
     * <code>string upload_url = 1;</code>
     */
    com.google.protobuf.ByteString getUploadUrlBytes();
  }
  /**
   *
   *
   * <pre>
   * Upload reference for media files.
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.UploadRef}
   */
  public static final class UploadRef extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.UploadRef)
      UploadRefOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use UploadRef.newBuilder() to construct.
    private UploadRef(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private UploadRef() {
      uploadUrl_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private UploadRef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                java.lang.String s = input.readStringRequireUtf8();

                uploadUrl_ = s;
                break;
              }
            default:
              {
                if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
          .internal_static_google_streetview_publish_v1_UploadRef_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
          .internal_static_google_streetview_publish_v1_UploadRef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef.class,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef.Builder
                  .class);
    }

    public static final int UPLOAD_URL_FIELD_NUMBER = 1;
    private volatile java.lang.Object uploadUrl_;
    /**
     *
     *
     * <pre>
     * Required. An upload reference should be unique for each user. It follows
     * the form:
     * "https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}"
     * </pre>
     *
     * <code>string upload_url = 1;</code>
     */
    public java.lang.String getUploadUrl() {
      java.lang.Object ref = uploadUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uploadUrl_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. An upload reference should be unique for each user. It follows
     * the form:
     * "https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}"
     * </pre>
     *
     * <code>string upload_url = 1;</code>
     */
    public com.google.protobuf.ByteString getUploadUrlBytes() {
      java.lang.Object ref = uploadUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        uploadUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!getUploadUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uploadUrl_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUploadUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uploadUrl_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef other =
          (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef) obj;

      boolean result = true;
      result = result && getUploadUrl().equals(other.getUploadUrl());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + UPLOAD_URL_FIELD_NUMBER;
      hash = (53 * hash) + getUploadUrl().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Upload reference for media files.
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.UploadRef}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.UploadRef)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_UploadRef_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_UploadRef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef.class,
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
                    .Builder.class);
      }

      // Construct using
      // com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        uploadUrl_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_UploadRef_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
          getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
          buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef result =
            new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef(this);
        result.uploadUrl_ = uploadUrl_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef) {
          return mergeFrom(
              (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef other) {
        if (other
            == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
                .getDefaultInstance()) return this;
        if (!other.getUploadUrl().isEmpty()) {
          uploadUrl_ = other.uploadUrl_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
            parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef)
                  e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object uploadUrl_ = "";
      /**
       *
       *
       * <pre>
       * Required. An upload reference should be unique for each user. It follows
       * the form:
       * "https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}"
       * </pre>
       *
       * <code>string upload_url = 1;</code>
       */
      public java.lang.String getUploadUrl() {
        java.lang.Object ref = uploadUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uploadUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. An upload reference should be unique for each user. It follows
       * the form:
       * "https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}"
       * </pre>
       *
       * <code>string upload_url = 1;</code>
       */
      public com.google.protobuf.ByteString getUploadUrlBytes() {
        java.lang.Object ref = uploadUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          uploadUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. An upload reference should be unique for each user. It follows
       * the form:
       * "https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}"
       * </pre>
       *
       * <code>string upload_url = 1;</code>
       */
      public Builder setUploadUrl(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        uploadUrl_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. An upload reference should be unique for each user. It follows
       * the form:
       * "https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}"
       * </pre>
       *
       * <code>string upload_url = 1;</code>
       */
      public Builder clearUploadUrl() {

        uploadUrl_ = getDefaultInstance().getUploadUrl();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. An upload reference should be unique for each user. It follows
       * the form:
       * "https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}"
       * </pre>
       *
       * <code>string upload_url = 1;</code>
       */
      public Builder setUploadUrlBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        uploadUrl_ = value;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.UploadRef)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.UploadRef)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .UploadRef
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UploadRef> PARSER =
        new com.google.protobuf.AbstractParser<UploadRef>() {
          @java.lang.Override
          public UploadRef parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new UploadRef(input, extensionRegistry);
          }
        };

    public static com.google.protobuf.Parser<UploadRef> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UploadRef> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface PhotoIdOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.PhotoId)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Required. A unique identifier for a photo.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     *
     *
     * <pre>
     * Required. A unique identifier for a photo.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString getIdBytes();
  }
  /**
   *
   *
   * <pre>
   * Identifier for a [Photo][google.streetview.publish.v1.Photo].
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.PhotoId}
   */
  public static final class PhotoId extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.PhotoId)
      PhotoIdOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use PhotoId.newBuilder() to construct.
    private PhotoId(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private PhotoId() {
      id_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private PhotoId(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                java.lang.String s = input.readStringRequireUtf8();

                id_ = s;
                break;
              }
            default:
              {
                if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
          .internal_static_google_streetview_publish_v1_PhotoId_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
          .internal_static_google_streetview_publish_v1_PhotoId_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId.class,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId.Builder
                  .class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     *
     *
     * <pre>
     * Required. A unique identifier for a photo.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. A unique identifier for a photo.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId other =
          (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId) obj;

      boolean result = true;
      result = result && getId().equals(other.getId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Identifier for a [Photo][google.streetview.publish.v1.Photo].
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.PhotoId}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.PhotoId)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoIdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_PhotoId_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_PhotoId_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId.class,
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId.Builder
                    .class);
      }

      // Construct using
      // com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_PhotoId_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
          getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
          buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId result =
            new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId(this);
        result.id_ = id_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId) {
          return mergeFrom(
              (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId other) {
        if (other
            == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
                .getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId parsedMessage =
            null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId)
                  e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       *
       *
       * <pre>
       * Required. A unique identifier for a photo.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. A unique identifier for a photo.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. A unique identifier for a photo.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        id_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. A unique identifier for a photo.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {

        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. A unique identifier for a photo.
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        id_ = value;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.PhotoId)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.PhotoId)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PhotoId> PARSER =
        new com.google.protobuf.AbstractParser<PhotoId>() {
          @java.lang.Override
          public PhotoId parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new PhotoId(input, extensionRegistry);
          }
        };

    public static com.google.protobuf.Parser<PhotoId> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PhotoId> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface LevelOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.Level)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Floor number, used for ordering. 0 indicates the ground level, 1 indicates
     * the first level above ground level, -1 indicates the first level under
     * ground level. Non-integer values are OK.
     * </pre>
     *
     * <code>double number = 1;</code>
     */
    double getNumber();

    /**
     *
     *
     * <pre>
     * Required. A name assigned to this Level, restricted to 3 characters.
     * Consider how the elevator buttons would be labeled for this level if there
     * was an elevator.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     *
     *
     * <pre>
     * Required. A name assigned to this Level, restricted to 3 characters.
     * Consider how the elevator buttons would be labeled for this level if there
     * was an elevator.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString getNameBytes();
  }
  /**
   *
   *
   * <pre>
   * Level information containing level number and its corresponding name.
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.Level}
   */
  public static final class Level extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.Level)
      LevelOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use Level.newBuilder() to construct.
    private Level(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Level() {
      number_ = 0D;
      name_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private Level(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9:
              {
                number_ = input.readDouble();
                break;
              }
            case 18:
              {
                java.lang.String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
            default:
              {
                if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
          .internal_static_google_streetview_publish_v1_Level_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
          .internal_static_google_streetview_publish_v1_Level_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level.class,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level.Builder
                  .class);
    }

    public static final int NUMBER_FIELD_NUMBER = 1;
    private double number_;
    /**
     *
     *
     * <pre>
     * Floor number, used for ordering. 0 indicates the ground level, 1 indicates
     * the first level above ground level, -1 indicates the first level under
     * ground level. Non-integer values are OK.
     * </pre>
     *
     * <code>double number = 1;</code>
     */
    public double getNumber() {
      return number_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     *
     *
     * <pre>
     * Required. A name assigned to this Level, restricted to 3 characters.
     * Consider how the elevator buttons would be labeled for this level if there
     * was an elevator.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. A name assigned to this Level, restricted to 3 characters.
     * Consider how the elevator buttons would be labeled for this level if there
     * was an elevator.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (number_ != 0D) {
        output.writeDouble(1, number_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (number_ != 0D) {
        size += com.google.protobuf.CodedOutputStream.computeDoubleSize(1, number_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level other =
          (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level) obj;

      boolean result = true;
      result =
          result
              && (java.lang.Double.doubleToLongBits(getNumber())
                  == java.lang.Double.doubleToLongBits(other.getNumber()));
      result = result && getName().equals(other.getName());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NUMBER_FIELD_NUMBER;
      hash =
          (53 * hash)
              + com.google.protobuf.Internal.hashLong(
                  java.lang.Double.doubleToLongBits(getNumber()));
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Level information containing level number and its corresponding name.
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.Level}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.Level)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.LevelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_Level_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_Level_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level.class,
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level.Builder
                    .class);
      }

      // Construct using
      // com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        number_ = 0D;

        name_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_Level_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
          getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
          buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level result =
            new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level(this);
        result.number_ = number_;
        result.name_ = name_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level) {
          return mergeFrom(
              (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level other) {
        if (other
            == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
                .getDefaultInstance()) return this;
        if (other.getNumber() != 0D) {
          setNumber(other.getNumber());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level parsedMessage =
            null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level)
                  e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double number_;
      /**
       *
       *
       * <pre>
       * Floor number, used for ordering. 0 indicates the ground level, 1 indicates
       * the first level above ground level, -1 indicates the first level under
       * ground level. Non-integer values are OK.
       * </pre>
       *
       * <code>double number = 1;</code>
       */
      public double getNumber() {
        return number_;
      }
      /**
       *
       *
       * <pre>
       * Floor number, used for ordering. 0 indicates the ground level, 1 indicates
       * the first level above ground level, -1 indicates the first level under
       * ground level. Non-integer values are OK.
       * </pre>
       *
       * <code>double number = 1;</code>
       */
      public Builder setNumber(double value) {

        number_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Floor number, used for ordering. 0 indicates the ground level, 1 indicates
       * the first level above ground level, -1 indicates the first level under
       * ground level. Non-integer values are OK.
       * </pre>
       *
       * <code>double number = 1;</code>
       */
      public Builder clearNumber() {

        number_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       *
       *
       * <pre>
       * Required. A name assigned to this Level, restricted to 3 characters.
       * Consider how the elevator buttons would be labeled for this level if there
       * was an elevator.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. A name assigned to this Level, restricted to 3 characters.
       * Consider how the elevator buttons would be labeled for this level if there
       * was an elevator.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. A name assigned to this Level, restricted to 3 characters.
       * Consider how the elevator buttons would be labeled for this level if there
       * was an elevator.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        name_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. A name assigned to this Level, restricted to 3 characters.
       * Consider how the elevator buttons would be labeled for this level if there
       * was an elevator.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {

        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. A name assigned to this Level, restricted to 3 characters.
       * Consider how the elevator buttons would be labeled for this level if there
       * was an elevator.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        name_ = value;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.Level)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.Level)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Level> PARSER =
        new com.google.protobuf.AbstractParser<Level>() {
          @java.lang.Override
          public Level parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Level(input, extensionRegistry);
          }
        };

    public static com.google.protobuf.Parser<Level> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Level> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface PoseOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.Pose)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Latitude and longitude pair of the pose, as explained here:
     * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
     * When creating a [Photo][google.streetview.publish.v1.Photo], if the
     * latitude and longitude pair are not provided, the geolocation from the
     * exif header is used. A latitude and longitude pair not provided in the
     * photo or exif header causes the create photo process to fail.
     * </pre>
     *
     * <code>.google.type.LatLng lat_lng_pair = 1;</code>
     */
    boolean hasLatLngPair();
    /**
     *
     *
     * <pre>
     * Latitude and longitude pair of the pose, as explained here:
     * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
     * When creating a [Photo][google.streetview.publish.v1.Photo], if the
     * latitude and longitude pair are not provided, the geolocation from the
     * exif header is used. A latitude and longitude pair not provided in the
     * photo or exif header causes the create photo process to fail.
     * </pre>
     *
     * <code>.google.type.LatLng lat_lng_pair = 1;</code>
     */
    com.google.type.LatLng getLatLngPair();
    /**
     *
     *
     * <pre>
     * Latitude and longitude pair of the pose, as explained here:
     * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
     * When creating a [Photo][google.streetview.publish.v1.Photo], if the
     * latitude and longitude pair are not provided, the geolocation from the
     * exif header is used. A latitude and longitude pair not provided in the
     * photo or exif header causes the create photo process to fail.
     * </pre>
     *
     * <code>.google.type.LatLng lat_lng_pair = 1;</code>
     */
    com.google.type.LatLngOrBuilder getLatLngPairOrBuilder();

    /**
     *
     *
     * <pre>
     * Altitude of the pose in meters above WGS84 ellipsoid.
     * NaN indicates an unmeasured quantity.
     * </pre>
     *
     * <code>double altitude = 2;</code>
     */
    double getAltitude();

    /**
     *
     *
     * <pre>
     * Compass heading, measured at the center of the photo in degrees clockwise
     * from North. Value must be &gt;=0 and &lt;360.
     * NaN indicates an unmeasured quantity.
     * </pre>
     *
     * <code>double heading = 3;</code>
     */
    double getHeading();

    /**
     *
     *
     * <pre>
     * Pitch, measured at the center of the photo in degrees. Value must be &gt;=-90
     * and &lt;= 90. A value of -90 means looking directly down, and a value of 90
     * means looking directly up.
     * NaN indicates an unmeasured quantity.
     * </pre>
     *
     * <code>double pitch = 4;</code>
     */
    double getPitch();

    /**
     *
     *
     * <pre>
     * Roll, measured in degrees. Value must be &gt;= 0 and &lt;360. A value of 0
     * means level with the horizon.
     * NaN indicates an unmeasured quantity.
     * </pre>
     *
     * <code>double roll = 5;</code>
     */
    double getRoll();

    /**
     *
     *
     * <pre>
     * Level (the floor in a building) used to configure vertical navigation.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Level level = 7;</code>
     */
    boolean hasLevel();
    /**
     *
     *
     * <pre>
     * Level (the floor in a building) used to configure vertical navigation.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Level level = 7;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level getLevel();
    /**
     *
     *
     * <pre>
     * Level (the floor in a building) used to configure vertical navigation.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Level level = 7;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.LevelOrBuilder
        getLevelOrBuilder();

    /**
     *
     *
     * <pre>
     * The estimated horizontal accuracy of this pose in meters with 68%
     * confidence (one standard deviation). For example, on Android, this value is
     * available from this method:
     * https://developer.android.com/reference/android/location/Location#getAccuracy().
     * Other platforms have different methods of obtaining similar accuracy
     * estimations.
     * </pre>
     *
     * <code>float accuracy_meters = 9;</code>
     */
    float getAccuracyMeters();
  }
  /**
   *
   *
   * <pre>
   * Raw pose measurement for an entity.
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.Pose}
   */
  public static final class Pose extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.Pose)
      PoseOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use Pose.newBuilder() to construct.
    private Pose(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Pose() {
      altitude_ = 0D;
      heading_ = 0D;
      pitch_ = 0D;
      roll_ = 0D;
      accuracyMeters_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private Pose(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.type.LatLng.Builder subBuilder = null;
                if (latLngPair_ != null) {
                  subBuilder = latLngPair_.toBuilder();
                }
                latLngPair_ = input.readMessage(com.google.type.LatLng.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(latLngPair_);
                  latLngPair_ = subBuilder.buildPartial();
                }

                break;
              }
            case 17:
              {
                altitude_ = input.readDouble();
                break;
              }
            case 25:
              {
                heading_ = input.readDouble();
                break;
              }
            case 33:
              {
                pitch_ = input.readDouble();
                break;
              }
            case 41:
              {
                roll_ = input.readDouble();
                break;
              }
            case 58:
              {
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level.Builder
                    subBuilder = null;
                if (level_ != null) {
                  subBuilder = level_.toBuilder();
                }
                level_ =
                    input.readMessage(
                        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
                            .parser(),
                        extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(level_);
                  level_ = subBuilder.buildPartial();
                }

                break;
              }
            case 77:
              {
                accuracyMeters_ = input.readFloat();
                break;
              }
            default:
              {
                if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
          .internal_static_google_streetview_publish_v1_Pose_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
          .internal_static_google_streetview_publish_v1_Pose_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose.class,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose.Builder
                  .class);
    }

    public static final int LAT_LNG_PAIR_FIELD_NUMBER = 1;
    private com.google.type.LatLng latLngPair_;
    /**
     *
     *
     * <pre>
     * Latitude and longitude pair of the pose, as explained here:
     * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
     * When creating a [Photo][google.streetview.publish.v1.Photo], if the
     * latitude and longitude pair are not provided, the geolocation from the
     * exif header is used. A latitude and longitude pair not provided in the
     * photo or exif header causes the create photo process to fail.
     * </pre>
     *
     * <code>.google.type.LatLng lat_lng_pair = 1;</code>
     */
    public boolean hasLatLngPair() {
      return latLngPair_ != null;
    }
    /**
     *
     *
     * <pre>
     * Latitude and longitude pair of the pose, as explained here:
     * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
     * When creating a [Photo][google.streetview.publish.v1.Photo], if the
     * latitude and longitude pair are not provided, the geolocation from the
     * exif header is used. A latitude and longitude pair not provided in the
     * photo or exif header causes the create photo process to fail.
     * </pre>
     *
     * <code>.google.type.LatLng lat_lng_pair = 1;</code>
     */
    public com.google.type.LatLng getLatLngPair() {
      return latLngPair_ == null ? com.google.type.LatLng.getDefaultInstance() : latLngPair_;
    }
    /**
     *
     *
     * <pre>
     * Latitude and longitude pair of the pose, as explained here:
     * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
     * When creating a [Photo][google.streetview.publish.v1.Photo], if the
     * latitude and longitude pair are not provided, the geolocation from the
     * exif header is used. A latitude and longitude pair not provided in the
     * photo or exif header causes the create photo process to fail.
     * </pre>
     *
     * <code>.google.type.LatLng lat_lng_pair = 1;</code>
     */
    public com.google.type.LatLngOrBuilder getLatLngPairOrBuilder() {
      return getLatLngPair();
    }

    public static final int ALTITUDE_FIELD_NUMBER = 2;
    private double altitude_;
    /**
     *
     *
     * <pre>
     * Altitude of the pose in meters above WGS84 ellipsoid.
     * NaN indicates an unmeasured quantity.
     * </pre>
     *
     * <code>double altitude = 2;</code>
     */
    public double getAltitude() {
      return altitude_;
    }

    public static final int HEADING_FIELD_NUMBER = 3;
    private double heading_;
    /**
     *
     *
     * <pre>
     * Compass heading, measured at the center of the photo in degrees clockwise
     * from North. Value must be &gt;=0 and &lt;360.
     * NaN indicates an unmeasured quantity.
     * </pre>
     *
     * <code>double heading = 3;</code>
     */
    public double getHeading() {
      return heading_;
    }

    public static final int PITCH_FIELD_NUMBER = 4;
    private double pitch_;
    /**
     *
     *
     * <pre>
     * Pitch, measured at the center of the photo in degrees. Value must be &gt;=-90
     * and &lt;= 90. A value of -90 means looking directly down, and a value of 90
     * means looking directly up.
     * NaN indicates an unmeasured quantity.
     * </pre>
     *
     * <code>double pitch = 4;</code>
     */
    public double getPitch() {
      return pitch_;
    }

    public static final int ROLL_FIELD_NUMBER = 5;
    private double roll_;
    /**
     *
     *
     * <pre>
     * Roll, measured in degrees. Value must be &gt;= 0 and &lt;360. A value of 0
     * means level with the horizon.
     * NaN indicates an unmeasured quantity.
     * </pre>
     *
     * <code>double roll = 5;</code>
     */
    public double getRoll() {
      return roll_;
    }

    public static final int LEVEL_FIELD_NUMBER = 7;
    private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level level_;
    /**
     *
     *
     * <pre>
     * Level (the floor in a building) used to configure vertical navigation.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Level level = 7;</code>
     */
    public boolean hasLevel() {
      return level_ != null;
    }
    /**
     *
     *
     * <pre>
     * Level (the floor in a building) used to configure vertical navigation.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Level level = 7;</code>
     */
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level getLevel() {
      return level_ == null
          ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
              .getDefaultInstance()
          : level_;
    }
    /**
     *
     *
     * <pre>
     * Level (the floor in a building) used to configure vertical navigation.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Level level = 7;</code>
     */
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.LevelOrBuilder
        getLevelOrBuilder() {
      return getLevel();
    }

    public static final int ACCURACY_METERS_FIELD_NUMBER = 9;
    private float accuracyMeters_;
    /**
     *
     *
     * <pre>
     * The estimated horizontal accuracy of this pose in meters with 68%
     * confidence (one standard deviation). For example, on Android, this value is
     * available from this method:
     * https://developer.android.com/reference/android/location/Location#getAccuracy().
     * Other platforms have different methods of obtaining similar accuracy
     * estimations.
     * </pre>
     *
     * <code>float accuracy_meters = 9;</code>
     */
    public float getAccuracyMeters() {
      return accuracyMeters_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (latLngPair_ != null) {
        output.writeMessage(1, getLatLngPair());
      }
      if (altitude_ != 0D) {
        output.writeDouble(2, altitude_);
      }
      if (heading_ != 0D) {
        output.writeDouble(3, heading_);
      }
      if (pitch_ != 0D) {
        output.writeDouble(4, pitch_);
      }
      if (roll_ != 0D) {
        output.writeDouble(5, roll_);
      }
      if (level_ != null) {
        output.writeMessage(7, getLevel());
      }
      if (accuracyMeters_ != 0F) {
        output.writeFloat(9, accuracyMeters_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (latLngPair_ != null) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getLatLngPair());
      }
      if (altitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream.computeDoubleSize(2, altitude_);
      }
      if (heading_ != 0D) {
        size += com.google.protobuf.CodedOutputStream.computeDoubleSize(3, heading_);
      }
      if (pitch_ != 0D) {
        size += com.google.protobuf.CodedOutputStream.computeDoubleSize(4, pitch_);
      }
      if (roll_ != 0D) {
        size += com.google.protobuf.CodedOutputStream.computeDoubleSize(5, roll_);
      }
      if (level_ != null) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(7, getLevel());
      }
      if (accuracyMeters_ != 0F) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(9, accuracyMeters_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose other =
          (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose) obj;

      boolean result = true;
      result = result && (hasLatLngPair() == other.hasLatLngPair());
      if (hasLatLngPair()) {
        result = result && getLatLngPair().equals(other.getLatLngPair());
      }
      result =
          result
              && (java.lang.Double.doubleToLongBits(getAltitude())
                  == java.lang.Double.doubleToLongBits(other.getAltitude()));
      result =
          result
              && (java.lang.Double.doubleToLongBits(getHeading())
                  == java.lang.Double.doubleToLongBits(other.getHeading()));
      result =
          result
              && (java.lang.Double.doubleToLongBits(getPitch())
                  == java.lang.Double.doubleToLongBits(other.getPitch()));
      result =
          result
              && (java.lang.Double.doubleToLongBits(getRoll())
                  == java.lang.Double.doubleToLongBits(other.getRoll()));
      result = result && (hasLevel() == other.hasLevel());
      if (hasLevel()) {
        result = result && getLevel().equals(other.getLevel());
      }
      result =
          result
              && (java.lang.Float.floatToIntBits(getAccuracyMeters())
                  == java.lang.Float.floatToIntBits(other.getAccuracyMeters()));
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLatLngPair()) {
        hash = (37 * hash) + LAT_LNG_PAIR_FIELD_NUMBER;
        hash = (53 * hash) + getLatLngPair().hashCode();
      }
      hash = (37 * hash) + ALTITUDE_FIELD_NUMBER;
      hash =
          (53 * hash)
              + com.google.protobuf.Internal.hashLong(
                  java.lang.Double.doubleToLongBits(getAltitude()));
      hash = (37 * hash) + HEADING_FIELD_NUMBER;
      hash =
          (53 * hash)
              + com.google.protobuf.Internal.hashLong(
                  java.lang.Double.doubleToLongBits(getHeading()));
      hash = (37 * hash) + PITCH_FIELD_NUMBER;
      hash =
          (53 * hash)
              + com.google.protobuf.Internal.hashLong(
                  java.lang.Double.doubleToLongBits(getPitch()));
      hash = (37 * hash) + ROLL_FIELD_NUMBER;
      hash =
          (53 * hash)
              + com.google.protobuf.Internal.hashLong(java.lang.Double.doubleToLongBits(getRoll()));
      if (hasLevel()) {
        hash = (37 * hash) + LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getLevel().hashCode();
      }
      hash = (37 * hash) + ACCURACY_METERS_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(getAccuracyMeters());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Raw pose measurement for an entity.
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.Pose}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.Pose)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PoseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_Pose_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_Pose_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose.class,
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose.Builder
                    .class);
      }

      // Construct using
      // com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (latLngPairBuilder_ == null) {
          latLngPair_ = null;
        } else {
          latLngPair_ = null;
          latLngPairBuilder_ = null;
        }
        altitude_ = 0D;

        heading_ = 0D;

        pitch_ = 0D;

        roll_ = 0D;

        if (levelBuilder_ == null) {
          level_ = null;
        } else {
          level_ = null;
          levelBuilder_ = null;
        }
        accuracyMeters_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_Pose_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
          getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
          buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose result =
            new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose(this);
        if (latLngPairBuilder_ == null) {
          result.latLngPair_ = latLngPair_;
        } else {
          result.latLngPair_ = latLngPairBuilder_.build();
        }
        result.altitude_ = altitude_;
        result.heading_ = heading_;
        result.pitch_ = pitch_;
        result.roll_ = roll_;
        if (levelBuilder_ == null) {
          result.level_ = level_;
        } else {
          result.level_ = levelBuilder_.build();
        }
        result.accuracyMeters_ = accuracyMeters_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose) {
          return mergeFrom(
              (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose other) {
        if (other
            == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
                .getDefaultInstance()) return this;
        if (other.hasLatLngPair()) {
          mergeLatLngPair(other.getLatLngPair());
        }
        if (other.getAltitude() != 0D) {
          setAltitude(other.getAltitude());
        }
        if (other.getHeading() != 0D) {
          setHeading(other.getHeading());
        }
        if (other.getPitch() != 0D) {
          setPitch(other.getPitch());
        }
        if (other.getRoll() != 0D) {
          setRoll(other.getRoll());
        }
        if (other.hasLevel()) {
          mergeLevel(other.getLevel());
        }
        if (other.getAccuracyMeters() != 0F) {
          setAccuracyMeters(other.getAccuracyMeters());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose parsedMessage =
            null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose)
                  e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.type.LatLng latLngPair_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.type.LatLng,
              com.google.type.LatLng.Builder,
              com.google.type.LatLngOrBuilder>
          latLngPairBuilder_;
      /**
       *
       *
       * <pre>
       * Latitude and longitude pair of the pose, as explained here:
       * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
       * When creating a [Photo][google.streetview.publish.v1.Photo], if the
       * latitude and longitude pair are not provided, the geolocation from the
       * exif header is used. A latitude and longitude pair not provided in the
       * photo or exif header causes the create photo process to fail.
       * </pre>
       *
       * <code>.google.type.LatLng lat_lng_pair = 1;</code>
       */
      public boolean hasLatLngPair() {
        return latLngPairBuilder_ != null || latLngPair_ != null;
      }
      /**
       *
       *
       * <pre>
       * Latitude and longitude pair of the pose, as explained here:
       * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
       * When creating a [Photo][google.streetview.publish.v1.Photo], if the
       * latitude and longitude pair are not provided, the geolocation from the
       * exif header is used. A latitude and longitude pair not provided in the
       * photo or exif header causes the create photo process to fail.
       * </pre>
       *
       * <code>.google.type.LatLng lat_lng_pair = 1;</code>
       */
      public com.google.type.LatLng getLatLngPair() {
        if (latLngPairBuilder_ == null) {
          return latLngPair_ == null ? com.google.type.LatLng.getDefaultInstance() : latLngPair_;
        } else {
          return latLngPairBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Latitude and longitude pair of the pose, as explained here:
       * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
       * When creating a [Photo][google.streetview.publish.v1.Photo], if the
       * latitude and longitude pair are not provided, the geolocation from the
       * exif header is used. A latitude and longitude pair not provided in the
       * photo or exif header causes the create photo process to fail.
       * </pre>
       *
       * <code>.google.type.LatLng lat_lng_pair = 1;</code>
       */
      public Builder setLatLngPair(com.google.type.LatLng value) {
        if (latLngPairBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          latLngPair_ = value;
          onChanged();
        } else {
          latLngPairBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Latitude and longitude pair of the pose, as explained here:
       * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
       * When creating a [Photo][google.streetview.publish.v1.Photo], if the
       * latitude and longitude pair are not provided, the geolocation from the
       * exif header is used. A latitude and longitude pair not provided in the
       * photo or exif header causes the create photo process to fail.
       * </pre>
       *
       * <code>.google.type.LatLng lat_lng_pair = 1;</code>
       */
      public Builder setLatLngPair(com.google.type.LatLng.Builder builderForValue) {
        if (latLngPairBuilder_ == null) {
          latLngPair_ = builderForValue.build();
          onChanged();
        } else {
          latLngPairBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Latitude and longitude pair of the pose, as explained here:
       * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
       * When creating a [Photo][google.streetview.publish.v1.Photo], if the
       * latitude and longitude pair are not provided, the geolocation from the
       * exif header is used. A latitude and longitude pair not provided in the
       * photo or exif header causes the create photo process to fail.
       * </pre>
       *
       * <code>.google.type.LatLng lat_lng_pair = 1;</code>
       */
      public Builder mergeLatLngPair(com.google.type.LatLng value) {
        if (latLngPairBuilder_ == null) {
          if (latLngPair_ != null) {
            latLngPair_ =
                com.google.type.LatLng.newBuilder(latLngPair_).mergeFrom(value).buildPartial();
          } else {
            latLngPair_ = value;
          }
          onChanged();
        } else {
          latLngPairBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Latitude and longitude pair of the pose, as explained here:
       * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
       * When creating a [Photo][google.streetview.publish.v1.Photo], if the
       * latitude and longitude pair are not provided, the geolocation from the
       * exif header is used. A latitude and longitude pair not provided in the
       * photo or exif header causes the create photo process to fail.
       * </pre>
       *
       * <code>.google.type.LatLng lat_lng_pair = 1;</code>
       */
      public Builder clearLatLngPair() {
        if (latLngPairBuilder_ == null) {
          latLngPair_ = null;
          onChanged();
        } else {
          latLngPair_ = null;
          latLngPairBuilder_ = null;
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Latitude and longitude pair of the pose, as explained here:
       * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
       * When creating a [Photo][google.streetview.publish.v1.Photo], if the
       * latitude and longitude pair are not provided, the geolocation from the
       * exif header is used. A latitude and longitude pair not provided in the
       * photo or exif header causes the create photo process to fail.
       * </pre>
       *
       * <code>.google.type.LatLng lat_lng_pair = 1;</code>
       */
      public com.google.type.LatLng.Builder getLatLngPairBuilder() {

        onChanged();
        return getLatLngPairFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Latitude and longitude pair of the pose, as explained here:
       * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
       * When creating a [Photo][google.streetview.publish.v1.Photo], if the
       * latitude and longitude pair are not provided, the geolocation from the
       * exif header is used. A latitude and longitude pair not provided in the
       * photo or exif header causes the create photo process to fail.
       * </pre>
       *
       * <code>.google.type.LatLng lat_lng_pair = 1;</code>
       */
      public com.google.type.LatLngOrBuilder getLatLngPairOrBuilder() {
        if (latLngPairBuilder_ != null) {
          return latLngPairBuilder_.getMessageOrBuilder();
        } else {
          return latLngPair_ == null ? com.google.type.LatLng.getDefaultInstance() : latLngPair_;
        }
      }
      /**
       *
       *
       * <pre>
       * Latitude and longitude pair of the pose, as explained here:
       * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
       * When creating a [Photo][google.streetview.publish.v1.Photo], if the
       * latitude and longitude pair are not provided, the geolocation from the
       * exif header is used. A latitude and longitude pair not provided in the
       * photo or exif header causes the create photo process to fail.
       * </pre>
       *
       * <code>.google.type.LatLng lat_lng_pair = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.type.LatLng,
              com.google.type.LatLng.Builder,
              com.google.type.LatLngOrBuilder>
          getLatLngPairFieldBuilder() {
        if (latLngPairBuilder_ == null) {
          latLngPairBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.type.LatLng,
                  com.google.type.LatLng.Builder,
                  com.google.type.LatLngOrBuilder>(
                  getLatLngPair(), getParentForChildren(), isClean());
          latLngPair_ = null;
        }
        return latLngPairBuilder_;
      }

      private double altitude_;
      /**
       *
       *
       * <pre>
       * Altitude of the pose in meters above WGS84 ellipsoid.
       * NaN indicates an unmeasured quantity.
       * </pre>
       *
       * <code>double altitude = 2;</code>
       */
      public double getAltitude() {
        return altitude_;
      }
      /**
       *
       *
       * <pre>
       * Altitude of the pose in meters above WGS84 ellipsoid.
       * NaN indicates an unmeasured quantity.
       * </pre>
       *
       * <code>double altitude = 2;</code>
       */
      public Builder setAltitude(double value) {

        altitude_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Altitude of the pose in meters above WGS84 ellipsoid.
       * NaN indicates an unmeasured quantity.
       * </pre>
       *
       * <code>double altitude = 2;</code>
       */
      public Builder clearAltitude() {

        altitude_ = 0D;
        onChanged();
        return this;
      }

      private double heading_;
      /**
       *
       *
       * <pre>
       * Compass heading, measured at the center of the photo in degrees clockwise
       * from North. Value must be &gt;=0 and &lt;360.
       * NaN indicates an unmeasured quantity.
       * </pre>
       *
       * <code>double heading = 3;</code>
       */
      public double getHeading() {
        return heading_;
      }
      /**
       *
       *
       * <pre>
       * Compass heading, measured at the center of the photo in degrees clockwise
       * from North. Value must be &gt;=0 and &lt;360.
       * NaN indicates an unmeasured quantity.
       * </pre>
       *
       * <code>double heading = 3;</code>
       */
      public Builder setHeading(double value) {

        heading_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Compass heading, measured at the center of the photo in degrees clockwise
       * from North. Value must be &gt;=0 and &lt;360.
       * NaN indicates an unmeasured quantity.
       * </pre>
       *
       * <code>double heading = 3;</code>
       */
      public Builder clearHeading() {

        heading_ = 0D;
        onChanged();
        return this;
      }

      private double pitch_;
      /**
       *
       *
       * <pre>
       * Pitch, measured at the center of the photo in degrees. Value must be &gt;=-90
       * and &lt;= 90. A value of -90 means looking directly down, and a value of 90
       * means looking directly up.
       * NaN indicates an unmeasured quantity.
       * </pre>
       *
       * <code>double pitch = 4;</code>
       */
      public double getPitch() {
        return pitch_;
      }
      /**
       *
       *
       * <pre>
       * Pitch, measured at the center of the photo in degrees. Value must be &gt;=-90
       * and &lt;= 90. A value of -90 means looking directly down, and a value of 90
       * means looking directly up.
       * NaN indicates an unmeasured quantity.
       * </pre>
       *
       * <code>double pitch = 4;</code>
       */
      public Builder setPitch(double value) {

        pitch_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Pitch, measured at the center of the photo in degrees. Value must be &gt;=-90
       * and &lt;= 90. A value of -90 means looking directly down, and a value of 90
       * means looking directly up.
       * NaN indicates an unmeasured quantity.
       * </pre>
       *
       * <code>double pitch = 4;</code>
       */
      public Builder clearPitch() {

        pitch_ = 0D;
        onChanged();
        return this;
      }

      private double roll_;
      /**
       *
       *
       * <pre>
       * Roll, measured in degrees. Value must be &gt;= 0 and &lt;360. A value of 0
       * means level with the horizon.
       * NaN indicates an unmeasured quantity.
       * </pre>
       *
       * <code>double roll = 5;</code>
       */
      public double getRoll() {
        return roll_;
      }
      /**
       *
       *
       * <pre>
       * Roll, measured in degrees. Value must be &gt;= 0 and &lt;360. A value of 0
       * means level with the horizon.
       * NaN indicates an unmeasured quantity.
       * </pre>
       *
       * <code>double roll = 5;</code>
       */
      public Builder setRoll(double value) {

        roll_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Roll, measured in degrees. Value must be &gt;= 0 and &lt;360. A value of 0
       * means level with the horizon.
       * NaN indicates an unmeasured quantity.
       * </pre>
       *
       * <code>double roll = 5;</code>
       */
      public Builder clearRoll() {

        roll_ = 0D;
        onChanged();
        return this;
      }

      private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level level_ =
          null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level.Builder,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.LevelOrBuilder>
          levelBuilder_;
      /**
       *
       *
       * <pre>
       * Level (the floor in a building) used to configure vertical navigation.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Level level = 7;</code>
       */
      public boolean hasLevel() {
        return levelBuilder_ != null || level_ != null;
      }
      /**
       *
       *
       * <pre>
       * Level (the floor in a building) used to configure vertical navigation.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Level level = 7;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level getLevel() {
        if (levelBuilder_ == null) {
          return level_ == null
              ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
                  .getDefaultInstance()
              : level_;
        } else {
          return levelBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Level (the floor in a building) used to configure vertical navigation.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Level level = 7;</code>
       */
      public Builder setLevel(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level value) {
        if (levelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          level_ = value;
          onChanged();
        } else {
          levelBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Level (the floor in a building) used to configure vertical navigation.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Level level = 7;</code>
       */
      public Builder setLevel(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level.Builder
              builderForValue) {
        if (levelBuilder_ == null) {
          level_ = builderForValue.build();
          onChanged();
        } else {
          levelBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Level (the floor in a building) used to configure vertical navigation.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Level level = 7;</code>
       */
      public Builder mergeLevel(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level value) {
        if (levelBuilder_ == null) {
          if (level_ != null) {
            level_ =
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
                    .newBuilder(level_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            level_ = value;
          }
          onChanged();
        } else {
          levelBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Level (the floor in a building) used to configure vertical navigation.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Level level = 7;</code>
       */
      public Builder clearLevel() {
        if (levelBuilder_ == null) {
          level_ = null;
          onChanged();
        } else {
          level_ = null;
          levelBuilder_ = null;
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Level (the floor in a building) used to configure vertical navigation.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Level level = 7;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level.Builder
          getLevelBuilder() {

        onChanged();
        return getLevelFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Level (the floor in a building) used to configure vertical navigation.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Level level = 7;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.LevelOrBuilder
          getLevelOrBuilder() {
        if (levelBuilder_ != null) {
          return levelBuilder_.getMessageOrBuilder();
        } else {
          return level_ == null
              ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level
                  .getDefaultInstance()
              : level_;
        }
      }
      /**
       *
       *
       * <pre>
       * Level (the floor in a building) used to configure vertical navigation.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Level level = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level.Builder,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.LevelOrBuilder>
          getLevelFieldBuilder() {
        if (levelBuilder_ == null) {
          levelBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level,
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Level.Builder,
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                      .LevelOrBuilder>(getLevel(), getParentForChildren(), isClean());
          level_ = null;
        }
        return levelBuilder_;
      }

      private float accuracyMeters_;
      /**
       *
       *
       * <pre>
       * The estimated horizontal accuracy of this pose in meters with 68%
       * confidence (one standard deviation). For example, on Android, this value is
       * available from this method:
       * https://developer.android.com/reference/android/location/Location#getAccuracy().
       * Other platforms have different methods of obtaining similar accuracy
       * estimations.
       * </pre>
       *
       * <code>float accuracy_meters = 9;</code>
       */
      public float getAccuracyMeters() {
        return accuracyMeters_;
      }
      /**
       *
       *
       * <pre>
       * The estimated horizontal accuracy of this pose in meters with 68%
       * confidence (one standard deviation). For example, on Android, this value is
       * available from this method:
       * https://developer.android.com/reference/android/location/Location#getAccuracy().
       * Other platforms have different methods of obtaining similar accuracy
       * estimations.
       * </pre>
       *
       * <code>float accuracy_meters = 9;</code>
       */
      public Builder setAccuracyMeters(float value) {

        accuracyMeters_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The estimated horizontal accuracy of this pose in meters with 68%
       * confidence (one standard deviation). For example, on Android, this value is
       * available from this method:
       * https://developer.android.com/reference/android/location/Location#getAccuracy().
       * Other platforms have different methods of obtaining similar accuracy
       * estimations.
       * </pre>
       *
       * <code>float accuracy_meters = 9;</code>
       */
      public Builder clearAccuracyMeters() {

        accuracyMeters_ = 0F;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.Pose)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.Pose)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Pose> PARSER =
        new com.google.protobuf.AbstractParser<Pose>() {
          @java.lang.Override
          public Pose parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Pose(input, extensionRegistry);
          }
        };

    public static com.google.protobuf.Parser<Pose> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Pose> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface PlaceOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.Place)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Place identifier, as described in
     * https://developers.google.com/places/place-id.
     * </pre>
     *
     * <code>string place_id = 1;</code>
     */
    java.lang.String getPlaceId();
    /**
     *
     *
     * <pre>
     * Place identifier, as described in
     * https://developers.google.com/places/place-id.
     * </pre>
     *
     * <code>string place_id = 1;</code>
     */
    com.google.protobuf.ByteString getPlaceIdBytes();

    /**
     *
     *
     * <pre>
     * Output-only. The name of the place, localized to the language_code.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     *
     *
     * <pre>
     * Output-only. The name of the place, localized to the language_code.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString getNameBytes();

    /**
     *
     *
     * <pre>
     * Output-only. The language_code that the name is localized with. This should
     * be the language_code specified in the request, but may be a fallback.
     * </pre>
     *
     * <code>string language_code = 3;</code>
     */
    java.lang.String getLanguageCode();
    /**
     *
     *
     * <pre>
     * Output-only. The language_code that the name is localized with. This should
     * be the language_code specified in the request, but may be a fallback.
     * </pre>
     *
     * <code>string language_code = 3;</code>
     */
    com.google.protobuf.ByteString getLanguageCodeBytes();
  }
  /**
   *
   *
   * <pre>
   * Place metadata for an entity.
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.Place}
   */
  public static final class Place extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.Place)
      PlaceOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use Place.newBuilder() to construct.
    private Place(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Place() {
      placeId_ = "";
      name_ = "";
      languageCode_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private Place(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                java.lang.String s = input.readStringRequireUtf8();

                placeId_ = s;
                break;
              }
            case 18:
              {
                java.lang.String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
            case 26:
              {
                java.lang.String s = input.readStringRequireUtf8();

                languageCode_ = s;
                break;
              }
            default:
              {
                if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
          .internal_static_google_streetview_publish_v1_Place_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
          .internal_static_google_streetview_publish_v1_Place_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place.class,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place.Builder
                  .class);
    }

    public static final int PLACE_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object placeId_;
    /**
     *
     *
     * <pre>
     * Place identifier, as described in
     * https://developers.google.com/places/place-id.
     * </pre>
     *
     * <code>string place_id = 1;</code>
     */
    public java.lang.String getPlaceId() {
      java.lang.Object ref = placeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        placeId_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Place identifier, as described in
     * https://developers.google.com/places/place-id.
     * </pre>
     *
     * <code>string place_id = 1;</code>
     */
    public com.google.protobuf.ByteString getPlaceIdBytes() {
      java.lang.Object ref = placeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        placeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     *
     *
     * <pre>
     * Output-only. The name of the place, localized to the language_code.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Output-only. The name of the place, localized to the language_code.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LANGUAGE_CODE_FIELD_NUMBER = 3;
    private volatile java.lang.Object languageCode_;
    /**
     *
     *
     * <pre>
     * Output-only. The language_code that the name is localized with. This should
     * be the language_code specified in the request, but may be a fallback.
     * </pre>
     *
     * <code>string language_code = 3;</code>
     */
    public java.lang.String getLanguageCode() {
      java.lang.Object ref = languageCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        languageCode_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Output-only. The language_code that the name is localized with. This should
     * be the language_code specified in the request, but may be a fallback.
     * </pre>
     *
     * <code>string language_code = 3;</code>
     */
    public com.google.protobuf.ByteString getLanguageCodeBytes() {
      java.lang.Object ref = languageCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        languageCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!getPlaceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, placeId_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getLanguageCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, languageCode_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPlaceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, placeId_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getLanguageCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, languageCode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place other =
          (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place) obj;

      boolean result = true;
      result = result && getPlaceId().equals(other.getPlaceId());
      result = result && getName().equals(other.getName());
      result = result && getLanguageCode().equals(other.getLanguageCode());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PLACE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPlaceId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + LANGUAGE_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getLanguageCode().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Place metadata for an entity.
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.Place}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.Place)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PlaceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_Place_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_Place_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place.class,
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place.Builder
                    .class);
      }

      // Construct using
      // com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        placeId_ = "";

        name_ = "";

        languageCode_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_Place_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
          getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
          buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place result =
            new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place(this);
        result.placeId_ = placeId_;
        result.name_ = name_;
        result.languageCode_ = languageCode_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place) {
          return mergeFrom(
              (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place other) {
        if (other
            == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
                .getDefaultInstance()) return this;
        if (!other.getPlaceId().isEmpty()) {
          placeId_ = other.placeId_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getLanguageCode().isEmpty()) {
          languageCode_ = other.languageCode_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place parsedMessage =
            null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place)
                  e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object placeId_ = "";
      /**
       *
       *
       * <pre>
       * Place identifier, as described in
       * https://developers.google.com/places/place-id.
       * </pre>
       *
       * <code>string place_id = 1;</code>
       */
      public java.lang.String getPlaceId() {
        java.lang.Object ref = placeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          placeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Place identifier, as described in
       * https://developers.google.com/places/place-id.
       * </pre>
       *
       * <code>string place_id = 1;</code>
       */
      public com.google.protobuf.ByteString getPlaceIdBytes() {
        java.lang.Object ref = placeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          placeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Place identifier, as described in
       * https://developers.google.com/places/place-id.
       * </pre>
       *
       * <code>string place_id = 1;</code>
       */
      public Builder setPlaceId(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        placeId_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Place identifier, as described in
       * https://developers.google.com/places/place-id.
       * </pre>
       *
       * <code>string place_id = 1;</code>
       */
      public Builder clearPlaceId() {

        placeId_ = getDefaultInstance().getPlaceId();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Place identifier, as described in
       * https://developers.google.com/places/place-id.
       * </pre>
       *
       * <code>string place_id = 1;</code>
       */
      public Builder setPlaceIdBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        placeId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       *
       *
       * <pre>
       * Output-only. The name of the place, localized to the language_code.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Output-only. The name of the place, localized to the language_code.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Output-only. The name of the place, localized to the language_code.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        name_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output-only. The name of the place, localized to the language_code.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {

        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output-only. The name of the place, localized to the language_code.
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object languageCode_ = "";
      /**
       *
       *
       * <pre>
       * Output-only. The language_code that the name is localized with. This should
       * be the language_code specified in the request, but may be a fallback.
       * </pre>
       *
       * <code>string language_code = 3;</code>
       */
      public java.lang.String getLanguageCode() {
        java.lang.Object ref = languageCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          languageCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Output-only. The language_code that the name is localized with. This should
       * be the language_code specified in the request, but may be a fallback.
       * </pre>
       *
       * <code>string language_code = 3;</code>
       */
      public com.google.protobuf.ByteString getLanguageCodeBytes() {
        java.lang.Object ref = languageCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          languageCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Output-only. The language_code that the name is localized with. This should
       * be the language_code specified in the request, but may be a fallback.
       * </pre>
       *
       * <code>string language_code = 3;</code>
       */
      public Builder setLanguageCode(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        languageCode_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output-only. The language_code that the name is localized with. This should
       * be the language_code specified in the request, but may be a fallback.
       * </pre>
       *
       * <code>string language_code = 3;</code>
       */
      public Builder clearLanguageCode() {

        languageCode_ = getDefaultInstance().getLanguageCode();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output-only. The language_code that the name is localized with. This should
       * be the language_code specified in the request, but may be a fallback.
       * </pre>
       *
       * <code>string language_code = 3;</code>
       */
      public Builder setLanguageCodeBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        languageCode_ = value;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.Place)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.Place)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Place> PARSER =
        new com.google.protobuf.AbstractParser<Place>() {
          @java.lang.Override
          public Place parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Place(input, extensionRegistry);
          }
        };

    public static com.google.protobuf.Parser<Place> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Place> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface ConnectionOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.Connection)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Required. The destination of the connection from the containing photo to
     * another photo.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
     */
    boolean hasTarget();
    /**
     *
     *
     * <pre>
     * Required. The destination of the connection from the containing photo to
     * another photo.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId getTarget();
    /**
     *
     *
     * <pre>
     * Required. The destination of the connection from the containing photo to
     * another photo.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoIdOrBuilder
        getTargetOrBuilder();
  }
  /**
   *
   *
   * <pre>
   * A connection is the link from a source photo to a destination photo.
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.Connection}
   */
  public static final class Connection extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.Connection)
      ConnectionOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use Connection.newBuilder() to construct.
    private Connection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Connection() {}

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private Connection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId.Builder
                    subBuilder = null;
                if (target_ != null) {
                  subBuilder = target_.toBuilder();
                }
                target_ =
                    input.readMessage(
                        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
                            .parser(),
                        extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(target_);
                  target_ = subBuilder.buildPartial();
                }

                break;
              }
            default:
              {
                if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
          .internal_static_google_streetview_publish_v1_Connection_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
          .internal_static_google_streetview_publish_v1_Connection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection.class,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection.Builder
                  .class);
    }

    public static final int TARGET_FIELD_NUMBER = 1;
    private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId target_;
    /**
     *
     *
     * <pre>
     * Required. The destination of the connection from the containing photo to
     * another photo.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
     */
    public boolean hasTarget() {
      return target_ != null;
    }
    /**
     *
     *
     * <pre>
     * Required. The destination of the connection from the containing photo to
     * another photo.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
     */
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId getTarget() {
      return target_ == null
          ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
              .getDefaultInstance()
          : target_;
    }
    /**
     *
     *
     * <pre>
     * Required. The destination of the connection from the containing photo to
     * another photo.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
     */
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoIdOrBuilder
        getTargetOrBuilder() {
      return getTarget();
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (target_ != null) {
        output.writeMessage(1, getTarget());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (target_ != null) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getTarget());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection other =
          (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection) obj;

      boolean result = true;
      result = result && (hasTarget() == other.hasTarget());
      if (hasTarget()) {
        result = result && getTarget().equals(other.getTarget());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTarget()) {
        hash = (37 * hash) + TARGET_FIELD_NUMBER;
        hash = (53 * hash) + getTarget().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * A connection is the link from a source photo to a destination photo.
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.Connection}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.Connection)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.ConnectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_Connection_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_Connection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
                    .class,
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
                    .Builder.class);
      }

      // Construct using
      // com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (targetBuilder_ == null) {
          target_ = null;
        } else {
          target_ = null;
          targetBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_Connection_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
          getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
          build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
          buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection result =
            new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection(
                this);
        if (targetBuilder_ == null) {
          result.target_ = target_;
        } else {
          result.target_ = targetBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection) {
          return mergeFrom(
              (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection other) {
        if (other
            == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
                .getDefaultInstance()) return this;
        if (other.hasTarget()) {
          mergeTarget(other.getTarget());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
            parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection)
                  e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId target_ =
          null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId.Builder,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoIdOrBuilder>
          targetBuilder_;
      /**
       *
       *
       * <pre>
       * Required. The destination of the connection from the containing photo to
       * another photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
       */
      public boolean hasTarget() {
        return targetBuilder_ != null || target_ != null;
      }
      /**
       *
       *
       * <pre>
       * Required. The destination of the connection from the containing photo to
       * another photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
          getTarget() {
        if (targetBuilder_ == null) {
          return target_ == null
              ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
                  .getDefaultInstance()
              : target_;
        } else {
          return targetBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The destination of the connection from the containing photo to
       * another photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
       */
      public Builder setTarget(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId value) {
        if (targetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          target_ = value;
          onChanged();
        } else {
          targetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The destination of the connection from the containing photo to
       * another photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
       */
      public Builder setTarget(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId.Builder
              builderForValue) {
        if (targetBuilder_ == null) {
          target_ = builderForValue.build();
          onChanged();
        } else {
          targetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The destination of the connection from the containing photo to
       * another photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
       */
      public Builder mergeTarget(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId value) {
        if (targetBuilder_ == null) {
          if (target_ != null) {
            target_ =
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
                    .newBuilder(target_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            target_ = value;
          }
          onChanged();
        } else {
          targetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The destination of the connection from the containing photo to
       * another photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
       */
      public Builder clearTarget() {
        if (targetBuilder_ == null) {
          target_ = null;
          onChanged();
        } else {
          target_ = null;
          targetBuilder_ = null;
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The destination of the connection from the containing photo to
       * another photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId.Builder
          getTargetBuilder() {

        onChanged();
        return getTargetFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Required. The destination of the connection from the containing photo to
       * another photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoIdOrBuilder
          getTargetOrBuilder() {
        if (targetBuilder_ != null) {
          return targetBuilder_.getMessageOrBuilder();
        } else {
          return target_ == null
              ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
                  .getDefaultInstance()
              : target_;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The destination of the connection from the containing photo to
       * another photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId.Builder,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoIdOrBuilder>
          getTargetFieldBuilder() {
        if (targetBuilder_ == null) {
          targetBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId,
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
                      .Builder,
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                      .PhotoIdOrBuilder>(getTarget(), getParentForChildren(), isClean());
          target_ = null;
        }
        return targetBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.Connection)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.Connection)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .Connection
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Connection> PARSER =
        new com.google.protobuf.AbstractParser<Connection>() {
          @java.lang.Override
          public Connection parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Connection(input, extensionRegistry);
          }
        };

    public static com.google.protobuf.Parser<Connection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Connection> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface PhotoOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.streetview.publish.v1.Photo)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Required when updating a photo. Output only when creating a photo.
     * Identifier for the photo, which is unique among all photos in
     * Google.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoId photo_id = 1;</code>
     */
    boolean hasPhotoId();
    /**
     *
     *
     * <pre>
     * Required when updating a photo. Output only when creating a photo.
     * Identifier for the photo, which is unique among all photos in
     * Google.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoId photo_id = 1;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId getPhotoId();
    /**
     *
     *
     * <pre>
     * Required when updating a photo. Output only when creating a photo.
     * Identifier for the photo, which is unique among all photos in
     * Google.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoId photo_id = 1;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoIdOrBuilder
        getPhotoIdOrBuilder();

    /**
     *
     *
     * <pre>
     * Required when creating a photo. Input only. The resource URL where the
     * photo bytes are uploaded to.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.UploadRef upload_reference = 2;</code>
     */
    boolean hasUploadReference();
    /**
     *
     *
     * <pre>
     * Required when creating a photo. Input only. The resource URL where the
     * photo bytes are uploaded to.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.UploadRef upload_reference = 2;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        getUploadReference();
    /**
     *
     *
     * <pre>
     * Required when creating a photo. Input only. The resource URL where the
     * photo bytes are uploaded to.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.UploadRef upload_reference = 2;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRefOrBuilder
        getUploadReferenceOrBuilder();

    /**
     *
     *
     * <pre>
     * Output only. The download URL for the photo bytes. This field is set only
     * when
     * [GetPhotoRequest.view][google.streetview.publish.v1.GetPhotoRequest.view]
     * is set to
     * [PhotoView.INCLUDE_DOWNLOAD_URL][google.streetview.publish.v1.PhotoView.INCLUDE_DOWNLOAD_URL].
     * </pre>
     *
     * <code>string download_url = 3;</code>
     */
    java.lang.String getDownloadUrl();
    /**
     *
     *
     * <pre>
     * Output only. The download URL for the photo bytes. This field is set only
     * when
     * [GetPhotoRequest.view][google.streetview.publish.v1.GetPhotoRequest.view]
     * is set to
     * [PhotoView.INCLUDE_DOWNLOAD_URL][google.streetview.publish.v1.PhotoView.INCLUDE_DOWNLOAD_URL].
     * </pre>
     *
     * <code>string download_url = 3;</code>
     */
    com.google.protobuf.ByteString getDownloadUrlBytes();

    /**
     *
     *
     * <pre>
     * Output only. The thumbnail URL for showing a preview of the given photo.
     * </pre>
     *
     * <code>string thumbnail_url = 9;</code>
     */
    java.lang.String getThumbnailUrl();
    /**
     *
     *
     * <pre>
     * Output only. The thumbnail URL for showing a preview of the given photo.
     * </pre>
     *
     * <code>string thumbnail_url = 9;</code>
     */
    com.google.protobuf.ByteString getThumbnailUrlBytes();

    /**
     *
     *
     * <pre>
     * Output only. The share link for the photo.
     * </pre>
     *
     * <code>string share_link = 11;</code>
     */
    java.lang.String getShareLink();
    /**
     *
     *
     * <pre>
     * Output only. The share link for the photo.
     * </pre>
     *
     * <code>string share_link = 11;</code>
     */
    com.google.protobuf.ByteString getShareLinkBytes();

    /**
     *
     *
     * <pre>
     * Pose of the photo.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Pose pose = 4;</code>
     */
    boolean hasPose();
    /**
     *
     *
     * <pre>
     * Pose of the photo.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Pose pose = 4;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose getPose();
    /**
     *
     *
     * <pre>
     * Pose of the photo.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Pose pose = 4;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PoseOrBuilder
        getPoseOrBuilder();

    /**
     *
     *
     * <pre>
     * Connections to other photos. A connection represents the link from this
     * photo to another photo.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
     */
    java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection>
        getConnectionsList();
    /**
     *
     *
     * <pre>
     * Connections to other photos. A connection represents the link from this
     * photo to another photo.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection getConnections(
        int index);
    /**
     *
     *
     * <pre>
     * Connections to other photos. A connection represents the link from this
     * photo to another photo.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
     */
    int getConnectionsCount();
    /**
     *
     *
     * <pre>
     * Connections to other photos. A connection represents the link from this
     * photo to another photo.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
     */
    java.util.List<
            ? extends
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                    .ConnectionOrBuilder>
        getConnectionsOrBuilderList();
    /**
     *
     *
     * <pre>
     * Connections to other photos. A connection represents the link from this
     * photo to another photo.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.ConnectionOrBuilder
        getConnectionsOrBuilder(int index);

    /**
     *
     *
     * <pre>
     * Absolute time when the photo was captured.
     * When the photo has no exif timestamp, this is used to set a timestamp in
     * the photo metadata.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp capture_time = 6;</code>
     */
    boolean hasCaptureTime();
    /**
     *
     *
     * <pre>
     * Absolute time when the photo was captured.
     * When the photo has no exif timestamp, this is used to set a timestamp in
     * the photo metadata.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp capture_time = 6;</code>
     */
    com.google.protobuf.Timestamp getCaptureTime();
    /**
     *
     *
     * <pre>
     * Absolute time when the photo was captured.
     * When the photo has no exif timestamp, this is used to set a timestamp in
     * the photo metadata.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp capture_time = 6;</code>
     */
    com.google.protobuf.TimestampOrBuilder getCaptureTimeOrBuilder();

    /**
     *
     *
     * <pre>
     * Places where this photo belongs.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
     */
    java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place>
        getPlacesList();
    /**
     *
     *
     * <pre>
     * Places where this photo belongs.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place getPlaces(int index);
    /**
     *
     *
     * <pre>
     * Places where this photo belongs.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
     */
    int getPlacesCount();
    /**
     *
     *
     * <pre>
     * Places where this photo belongs.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
     */
    java.util.List<
            ? extends
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PlaceOrBuilder>
        getPlacesOrBuilderList();
    /**
     *
     *
     * <pre>
     * Places where this photo belongs.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PlaceOrBuilder
        getPlacesOrBuilder(int index);

    /**
     *
     *
     * <pre>
     * Output only. View count of the photo.
     * </pre>
     *
     * <code>int64 view_count = 10;</code>
     */
    long getViewCount();

    /**
     *
     *
     * <pre>
     * Output only. Status of rights transfer on this photo.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo.TransferStatus transfer_status = 12;</code>
     */
    int getTransferStatusValue();
    /**
     *
     *
     * <pre>
     * Output only. Status of rights transfer on this photo.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo.TransferStatus transfer_status = 12;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.TransferStatus
        getTransferStatus();

    /**
     *
     *
     * <pre>
     * Output only. Status in Google Maps, whether this photo was published or
     * rejected.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo.MapsPublishStatus maps_publish_status = 13;</code>
     */
    int getMapsPublishStatusValue();
    /**
     *
     *
     * <pre>
     * Output only. Status in Google Maps, whether this photo was published or
     * rejected.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo.MapsPublishStatus maps_publish_status = 13;</code>
     */
    com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.MapsPublishStatus
        getMapsPublishStatus();
  }
  /**
   *
   *
   * <pre>
   * Photo is used to store 360 photos along with photo metadata.
   * </pre>
   *
   * Protobuf type {@code google.streetview.publish.v1.Photo}
   */
  public static final class Photo extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.streetview.publish.v1.Photo)
      PhotoOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use Photo.newBuilder() to construct.
    private Photo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Photo() {
      downloadUrl_ = "";
      thumbnailUrl_ = "";
      shareLink_ = "";
      connections_ = java.util.Collections.emptyList();
      places_ = java.util.Collections.emptyList();
      viewCount_ = 0L;
      transferStatus_ = 0;
      mapsPublishStatus_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private Photo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId.Builder
                    subBuilder = null;
                if (photoId_ != null) {
                  subBuilder = photoId_.toBuilder();
                }
                photoId_ =
                    input.readMessage(
                        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
                            .parser(),
                        extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(photoId_);
                  photoId_ = subBuilder.buildPartial();
                }

                break;
              }
            case 18:
              {
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
                        .Builder
                    subBuilder = null;
                if (uploadReference_ != null) {
                  subBuilder = uploadReference_.toBuilder();
                }
                uploadReference_ =
                    input.readMessage(
                        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                            .UploadRef.parser(),
                        extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(uploadReference_);
                  uploadReference_ = subBuilder.buildPartial();
                }

                break;
              }
            case 26:
              {
                java.lang.String s = input.readStringRequireUtf8();

                downloadUrl_ = s;
                break;
              }
            case 34:
              {
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose.Builder
                    subBuilder = null;
                if (pose_ != null) {
                  subBuilder = pose_.toBuilder();
                }
                pose_ =
                    input.readMessage(
                        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
                            .parser(),
                        extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(pose_);
                  pose_ = subBuilder.buildPartial();
                }

                break;
              }
            case 42:
              {
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                  connections_ =
                      new java.util.ArrayList<
                          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                              .Connection>();
                  mutable_bitField0_ |= 0x00000040;
                }
                connections_.add(
                    input.readMessage(
                        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                            .Connection.parser(),
                        extensionRegistry));
                break;
              }
            case 50:
              {
                com.google.protobuf.Timestamp.Builder subBuilder = null;
                if (captureTime_ != null) {
                  subBuilder = captureTime_.toBuilder();
                }
                captureTime_ =
                    input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(captureTime_);
                  captureTime_ = subBuilder.buildPartial();
                }

                break;
              }
            case 58:
              {
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                  places_ =
                      new java.util.ArrayList<
                          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                              .Place>();
                  mutable_bitField0_ |= 0x00000100;
                }
                places_.add(
                    input.readMessage(
                        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
                            .parser(),
                        extensionRegistry));
                break;
              }
            case 74:
              {
                java.lang.String s = input.readStringRequireUtf8();

                thumbnailUrl_ = s;
                break;
              }
            case 80:
              {
                viewCount_ = input.readInt64();
                break;
              }
            case 90:
              {
                java.lang.String s = input.readStringRequireUtf8();

                shareLink_ = s;
                break;
              }
            case 96:
              {
                int rawValue = input.readEnum();

                transferStatus_ = rawValue;
                break;
              }
            case 104:
              {
                int rawValue = input.readEnum();

                mapsPublishStatus_ = rawValue;
                break;
              }
            default:
              {
                if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          connections_ = java.util.Collections.unmodifiableList(connections_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          places_ = java.util.Collections.unmodifiableList(places_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
          .internal_static_google_streetview_publish_v1_Photo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
          .internal_static_google_streetview_publish_v1_Photo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.class,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder
                  .class);
    }

    /**
     *
     *
     * <pre>
     * Status of rights transfer.
     * </pre>
     *
     * Protobuf enum {@code google.streetview.publish.v1.Photo.TransferStatus}
     */
    public enum TransferStatus implements com.google.protobuf.ProtocolMessageEnum {
      /**
       *
       *
       * <pre>
       * The status of this transfer is unspecified.
       * </pre>
       *
       * <code>TRANSFER_STATUS_UNKNOWN = 0;</code>
       */
      TRANSFER_STATUS_UNKNOWN(0),
      /**
       *
       *
       * <pre>
       * This photo has never been in a transfer.
       * </pre>
       *
       * <code>NEVER_TRANSFERRED = 1;</code>
       */
      NEVER_TRANSFERRED(1),
      /**
       *
       *
       * <pre>
       * This photo transfer has been initiated, but the receiver has not yet
       * responded.
       * </pre>
       *
       * <code>PENDING = 2;</code>
       */
      PENDING(2),
      /**
       *
       *
       * <pre>
       * The photo transfer has been completed, and this photo has been
       * transferred to the recipient.
       * </pre>
       *
       * <code>COMPLETED = 3;</code>
       */
      COMPLETED(3),
      /**
       *
       *
       * <pre>
       * The recipient rejected this photo transfer.
       * </pre>
       *
       * <code>REJECTED = 4;</code>
       */
      REJECTED(4),
      /**
       *
       *
       * <pre>
       * The photo transfer expired before the recipient took any action.
       * </pre>
       *
       * <code>EXPIRED = 5;</code>
       */
      EXPIRED(5),
      /**
       *
       *
       * <pre>
       * The sender cancelled this photo transfer.
       * </pre>
       *
       * <code>CANCELLED = 6;</code>
       */
      CANCELLED(6),
      /**
       *
       *
       * <pre>
       * The recipient owns this photo due to a rights transfer.
       * </pre>
       *
       * <code>RECEIVED_VIA_TRANSFER = 7;</code>
       */
      RECEIVED_VIA_TRANSFER(7),
      UNRECOGNIZED(-1),
      ;

      /**
       *
       *
       * <pre>
       * The status of this transfer is unspecified.
       * </pre>
       *
       * <code>TRANSFER_STATUS_UNKNOWN = 0;</code>
       */
      public static final int TRANSFER_STATUS_UNKNOWN_VALUE = 0;
      /**
       *
       *
       * <pre>
       * This photo has never been in a transfer.
       * </pre>
       *
       * <code>NEVER_TRANSFERRED = 1;</code>
       */
      public static final int NEVER_TRANSFERRED_VALUE = 1;
      /**
       *
       *
       * <pre>
       * This photo transfer has been initiated, but the receiver has not yet
       * responded.
       * </pre>
       *
       * <code>PENDING = 2;</code>
       */
      public static final int PENDING_VALUE = 2;
      /**
       *
       *
       * <pre>
       * The photo transfer has been completed, and this photo has been
       * transferred to the recipient.
       * </pre>
       *
       * <code>COMPLETED = 3;</code>
       */
      public static final int COMPLETED_VALUE = 3;
      /**
       *
       *
       * <pre>
       * The recipient rejected this photo transfer.
       * </pre>
       *
       * <code>REJECTED = 4;</code>
       */
      public static final int REJECTED_VALUE = 4;
      /**
       *
       *
       * <pre>
       * The photo transfer expired before the recipient took any action.
       * </pre>
       *
       * <code>EXPIRED = 5;</code>
       */
      public static final int EXPIRED_VALUE = 5;
      /**
       *
       *
       * <pre>
       * The sender cancelled this photo transfer.
       * </pre>
       *
       * <code>CANCELLED = 6;</code>
       */
      public static final int CANCELLED_VALUE = 6;
      /**
       *
       *
       * <pre>
       * The recipient owns this photo due to a rights transfer.
       * </pre>
       *
       * <code>RECEIVED_VIA_TRANSFER = 7;</code>
       */
      public static final int RECEIVED_VIA_TRANSFER_VALUE = 7;

      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /** @deprecated Use {@link #forNumber(int)} instead. */
      @java.lang.Deprecated
      public static TransferStatus valueOf(int value) {
        return forNumber(value);
      }

      public static TransferStatus forNumber(int value) {
        switch (value) {
          case 0:
            return TRANSFER_STATUS_UNKNOWN;
          case 1:
            return NEVER_TRANSFERRED;
          case 2:
            return PENDING;
          case 3:
            return COMPLETED;
          case 4:
            return REJECTED;
          case 5:
            return EXPIRED;
          case 6:
            return CANCELLED;
          case 7:
            return RECEIVED_VIA_TRANSFER;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TransferStatus> internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<TransferStatus>
          internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<TransferStatus>() {
                public TransferStatus findValueByNumber(int number) {
                  return TransferStatus.forNumber(number);
                }
              };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }

      public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
        return getDescriptor();
      }

      public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
            .getDescriptor()
            .getEnumTypes()
            .get(0);
      }

      private static final TransferStatus[] VALUES = values();

      public static TransferStatus valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TransferStatus(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.streetview.publish.v1.Photo.TransferStatus)
    }

    /**
     *
     *
     * <pre>
     * Publication status of the photo in Google Maps.
     * </pre>
     *
     * Protobuf enum {@code google.streetview.publish.v1.Photo.MapsPublishStatus}
     */
    public enum MapsPublishStatus implements com.google.protobuf.ProtocolMessageEnum {
      /**
       *
       *
       * <pre>
       * The status of the photo is unknown.
       * </pre>
       *
       * <code>UNSPECIFIED_MAPS_PUBLISH_STATUS = 0;</code>
       */
      UNSPECIFIED_MAPS_PUBLISH_STATUS(0),
      /**
       *
       *
       * <pre>
       * The photo is published to the public through Google Maps.
       * </pre>
       *
       * <code>PUBLISHED = 1;</code>
       */
      PUBLISHED(1),
      /**
       *
       *
       * <pre>
       * The photo has been rejected for an unknown reason.
       * </pre>
       *
       * <code>REJECTED_UNKNOWN = 2;</code>
       */
      REJECTED_UNKNOWN(2),
      UNRECOGNIZED(-1),
      ;

      /**
       *
       *
       * <pre>
       * The status of the photo is unknown.
       * </pre>
       *
       * <code>UNSPECIFIED_MAPS_PUBLISH_STATUS = 0;</code>
       */
      public static final int UNSPECIFIED_MAPS_PUBLISH_STATUS_VALUE = 0;
      /**
       *
       *
       * <pre>
       * The photo is published to the public through Google Maps.
       * </pre>
       *
       * <code>PUBLISHED = 1;</code>
       */
      public static final int PUBLISHED_VALUE = 1;
      /**
       *
       *
       * <pre>
       * The photo has been rejected for an unknown reason.
       * </pre>
       *
       * <code>REJECTED_UNKNOWN = 2;</code>
       */
      public static final int REJECTED_UNKNOWN_VALUE = 2;

      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /** @deprecated Use {@link #forNumber(int)} instead. */
      @java.lang.Deprecated
      public static MapsPublishStatus valueOf(int value) {
        return forNumber(value);
      }

      public static MapsPublishStatus forNumber(int value) {
        switch (value) {
          case 0:
            return UNSPECIFIED_MAPS_PUBLISH_STATUS;
          case 1:
            return PUBLISHED;
          case 2:
            return REJECTED_UNKNOWN;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MapsPublishStatus>
          internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<MapsPublishStatus>
          internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<MapsPublishStatus>() {
                public MapsPublishStatus findValueByNumber(int number) {
                  return MapsPublishStatus.forNumber(number);
                }
              };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }

      public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
        return getDescriptor();
      }

      public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
            .getDescriptor()
            .getEnumTypes()
            .get(1);
      }

      private static final MapsPublishStatus[] VALUES = values();

      public static MapsPublishStatus valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private MapsPublishStatus(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.streetview.publish.v1.Photo.MapsPublishStatus)
    }

    private int bitField0_;
    public static final int PHOTO_ID_FIELD_NUMBER = 1;
    private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId photoId_;
    /**
     *
     *
     * <pre>
     * Required when updating a photo. Output only when creating a photo.
     * Identifier for the photo, which is unique among all photos in
     * Google.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoId photo_id = 1;</code>
     */
    public boolean hasPhotoId() {
      return photoId_ != null;
    }
    /**
     *
     *
     * <pre>
     * Required when updating a photo. Output only when creating a photo.
     * Identifier for the photo, which is unique among all photos in
     * Google.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoId photo_id = 1;</code>
     */
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
        getPhotoId() {
      return photoId_ == null
          ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
              .getDefaultInstance()
          : photoId_;
    }
    /**
     *
     *
     * <pre>
     * Required when updating a photo. Output only when creating a photo.
     * Identifier for the photo, which is unique among all photos in
     * Google.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.PhotoId photo_id = 1;</code>
     */
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoIdOrBuilder
        getPhotoIdOrBuilder() {
      return getPhotoId();
    }

    public static final int UPLOAD_REFERENCE_FIELD_NUMBER = 2;
    private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        uploadReference_;
    /**
     *
     *
     * <pre>
     * Required when creating a photo. Input only. The resource URL where the
     * photo bytes are uploaded to.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.UploadRef upload_reference = 2;</code>
     */
    public boolean hasUploadReference() {
      return uploadReference_ != null;
    }
    /**
     *
     *
     * <pre>
     * Required when creating a photo. Input only. The resource URL where the
     * photo bytes are uploaded to.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.UploadRef upload_reference = 2;</code>
     */
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
        getUploadReference() {
      return uploadReference_ == null
          ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
              .getDefaultInstance()
          : uploadReference_;
    }
    /**
     *
     *
     * <pre>
     * Required when creating a photo. Input only. The resource URL where the
     * photo bytes are uploaded to.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.UploadRef upload_reference = 2;</code>
     */
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRefOrBuilder
        getUploadReferenceOrBuilder() {
      return getUploadReference();
    }

    public static final int DOWNLOAD_URL_FIELD_NUMBER = 3;
    private volatile java.lang.Object downloadUrl_;
    /**
     *
     *
     * <pre>
     * Output only. The download URL for the photo bytes. This field is set only
     * when
     * [GetPhotoRequest.view][google.streetview.publish.v1.GetPhotoRequest.view]
     * is set to
     * [PhotoView.INCLUDE_DOWNLOAD_URL][google.streetview.publish.v1.PhotoView.INCLUDE_DOWNLOAD_URL].
     * </pre>
     *
     * <code>string download_url = 3;</code>
     */
    public java.lang.String getDownloadUrl() {
      java.lang.Object ref = downloadUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        downloadUrl_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The download URL for the photo bytes. This field is set only
     * when
     * [GetPhotoRequest.view][google.streetview.publish.v1.GetPhotoRequest.view]
     * is set to
     * [PhotoView.INCLUDE_DOWNLOAD_URL][google.streetview.publish.v1.PhotoView.INCLUDE_DOWNLOAD_URL].
     * </pre>
     *
     * <code>string download_url = 3;</code>
     */
    public com.google.protobuf.ByteString getDownloadUrlBytes() {
      java.lang.Object ref = downloadUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        downloadUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int THUMBNAIL_URL_FIELD_NUMBER = 9;
    private volatile java.lang.Object thumbnailUrl_;
    /**
     *
     *
     * <pre>
     * Output only. The thumbnail URL for showing a preview of the given photo.
     * </pre>
     *
     * <code>string thumbnail_url = 9;</code>
     */
    public java.lang.String getThumbnailUrl() {
      java.lang.Object ref = thumbnailUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        thumbnailUrl_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The thumbnail URL for showing a preview of the given photo.
     * </pre>
     *
     * <code>string thumbnail_url = 9;</code>
     */
    public com.google.protobuf.ByteString getThumbnailUrlBytes() {
      java.lang.Object ref = thumbnailUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        thumbnailUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHARE_LINK_FIELD_NUMBER = 11;
    private volatile java.lang.Object shareLink_;
    /**
     *
     *
     * <pre>
     * Output only. The share link for the photo.
     * </pre>
     *
     * <code>string share_link = 11;</code>
     */
    public java.lang.String getShareLink() {
      java.lang.Object ref = shareLink_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        shareLink_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The share link for the photo.
     * </pre>
     *
     * <code>string share_link = 11;</code>
     */
    public com.google.protobuf.ByteString getShareLinkBytes() {
      java.lang.Object ref = shareLink_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        shareLink_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POSE_FIELD_NUMBER = 4;
    private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose pose_;
    /**
     *
     *
     * <pre>
     * Pose of the photo.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Pose pose = 4;</code>
     */
    public boolean hasPose() {
      return pose_ != null;
    }
    /**
     *
     *
     * <pre>
     * Pose of the photo.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Pose pose = 4;</code>
     */
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose getPose() {
      return pose_ == null
          ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
              .getDefaultInstance()
          : pose_;
    }
    /**
     *
     *
     * <pre>
     * Pose of the photo.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Pose pose = 4;</code>
     */
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PoseOrBuilder
        getPoseOrBuilder() {
      return getPose();
    }

    public static final int CONNECTIONS_FIELD_NUMBER = 5;
    private java.util.List<
            com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection>
        connections_;
    /**
     *
     *
     * <pre>
     * Connections to other photos. A connection represents the link from this
     * photo to another photo.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
     */
    public java.util.List<
            com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection>
        getConnectionsList() {
      return connections_;
    }
    /**
     *
     *
     * <pre>
     * Connections to other photos. A connection represents the link from this
     * photo to another photo.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
     */
    public java.util.List<
            ? extends
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                    .ConnectionOrBuilder>
        getConnectionsOrBuilderList() {
      return connections_;
    }
    /**
     *
     *
     * <pre>
     * Connections to other photos. A connection represents the link from this
     * photo to another photo.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
     */
    public int getConnectionsCount() {
      return connections_.size();
    }
    /**
     *
     *
     * <pre>
     * Connections to other photos. A connection represents the link from this
     * photo to another photo.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
     */
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
        getConnections(int index) {
      return connections_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Connections to other photos. A connection represents the link from this
     * photo to another photo.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
     */
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.ConnectionOrBuilder
        getConnectionsOrBuilder(int index) {
      return connections_.get(index);
    }

    public static final int CAPTURE_TIME_FIELD_NUMBER = 6;
    private com.google.protobuf.Timestamp captureTime_;
    /**
     *
     *
     * <pre>
     * Absolute time when the photo was captured.
     * When the photo has no exif timestamp, this is used to set a timestamp in
     * the photo metadata.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp capture_time = 6;</code>
     */
    public boolean hasCaptureTime() {
      return captureTime_ != null;
    }
    /**
     *
     *
     * <pre>
     * Absolute time when the photo was captured.
     * When the photo has no exif timestamp, this is used to set a timestamp in
     * the photo metadata.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp capture_time = 6;</code>
     */
    public com.google.protobuf.Timestamp getCaptureTime() {
      return captureTime_ == null
          ? com.google.protobuf.Timestamp.getDefaultInstance()
          : captureTime_;
    }
    /**
     *
     *
     * <pre>
     * Absolute time when the photo was captured.
     * When the photo has no exif timestamp, this is used to set a timestamp in
     * the photo metadata.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp capture_time = 6;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getCaptureTimeOrBuilder() {
      return getCaptureTime();
    }

    public static final int PLACES_FIELD_NUMBER = 7;
    private java.util.List<
            com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place>
        places_;
    /**
     *
     *
     * <pre>
     * Places where this photo belongs.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
     */
    public java.util.List<com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place>
        getPlacesList() {
      return places_;
    }
    /**
     *
     *
     * <pre>
     * Places where this photo belongs.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
     */
    public java.util.List<
            ? extends
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PlaceOrBuilder>
        getPlacesOrBuilderList() {
      return places_;
    }
    /**
     *
     *
     * <pre>
     * Places where this photo belongs.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
     */
    public int getPlacesCount() {
      return places_.size();
    }
    /**
     *
     *
     * <pre>
     * Places where this photo belongs.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
     */
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place getPlaces(
        int index) {
      return places_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Places where this photo belongs.
     * </pre>
     *
     * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
     */
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PlaceOrBuilder
        getPlacesOrBuilder(int index) {
      return places_.get(index);
    }

    public static final int VIEW_COUNT_FIELD_NUMBER = 10;
    private long viewCount_;
    /**
     *
     *
     * <pre>
     * Output only. View count of the photo.
     * </pre>
     *
     * <code>int64 view_count = 10;</code>
     */
    public long getViewCount() {
      return viewCount_;
    }

    public static final int TRANSFER_STATUS_FIELD_NUMBER = 12;
    private int transferStatus_;
    /**
     *
     *
     * <pre>
     * Output only. Status of rights transfer on this photo.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo.TransferStatus transfer_status = 12;</code>
     */
    public int getTransferStatusValue() {
      return transferStatus_;
    }
    /**
     *
     *
     * <pre>
     * Output only. Status of rights transfer on this photo.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo.TransferStatus transfer_status = 12;</code>
     */
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.TransferStatus
        getTransferStatus() {
      @SuppressWarnings("deprecation")
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.TransferStatus
          result =
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
                  .TransferStatus.valueOf(transferStatus_);
      return result == null
          ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.TransferStatus
              .UNRECOGNIZED
          : result;
    }

    public static final int MAPS_PUBLISH_STATUS_FIELD_NUMBER = 13;
    private int mapsPublishStatus_;
    /**
     *
     *
     * <pre>
     * Output only. Status in Google Maps, whether this photo was published or
     * rejected.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo.MapsPublishStatus maps_publish_status = 13;</code>
     */
    public int getMapsPublishStatusValue() {
      return mapsPublishStatus_;
    }
    /**
     *
     *
     * <pre>
     * Output only. Status in Google Maps, whether this photo was published or
     * rejected.
     * </pre>
     *
     * <code>.google.streetview.publish.v1.Photo.MapsPublishStatus maps_publish_status = 13;</code>
     */
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
            .MapsPublishStatus
        getMapsPublishStatus() {
      @SuppressWarnings("deprecation")
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.MapsPublishStatus
          result =
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
                  .MapsPublishStatus.valueOf(mapsPublishStatus_);
      return result == null
          ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
              .MapsPublishStatus.UNRECOGNIZED
          : result;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (photoId_ != null) {
        output.writeMessage(1, getPhotoId());
      }
      if (uploadReference_ != null) {
        output.writeMessage(2, getUploadReference());
      }
      if (!getDownloadUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, downloadUrl_);
      }
      if (pose_ != null) {
        output.writeMessage(4, getPose());
      }
      for (int i = 0; i < connections_.size(); i++) {
        output.writeMessage(5, connections_.get(i));
      }
      if (captureTime_ != null) {
        output.writeMessage(6, getCaptureTime());
      }
      for (int i = 0; i < places_.size(); i++) {
        output.writeMessage(7, places_.get(i));
      }
      if (!getThumbnailUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, thumbnailUrl_);
      }
      if (viewCount_ != 0L) {
        output.writeInt64(10, viewCount_);
      }
      if (!getShareLinkBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, shareLink_);
      }
      if (transferStatus_
          != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
              .TransferStatus.TRANSFER_STATUS_UNKNOWN.getNumber()) {
        output.writeEnum(12, transferStatus_);
      }
      if (mapsPublishStatus_
          != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
              .MapsPublishStatus.UNSPECIFIED_MAPS_PUBLISH_STATUS.getNumber()) {
        output.writeEnum(13, mapsPublishStatus_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (photoId_ != null) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getPhotoId());
      }
      if (uploadReference_ != null) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getUploadReference());
      }
      if (!getDownloadUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, downloadUrl_);
      }
      if (pose_ != null) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, getPose());
      }
      for (int i = 0; i < connections_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, connections_.get(i));
      }
      if (captureTime_ != null) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, getCaptureTime());
      }
      for (int i = 0; i < places_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(7, places_.get(i));
      }
      if (!getThumbnailUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, thumbnailUrl_);
      }
      if (viewCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream.computeInt64Size(10, viewCount_);
      }
      if (!getShareLinkBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, shareLink_);
      }
      if (transferStatus_
          != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
              .TransferStatus.TRANSFER_STATUS_UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(12, transferStatus_);
      }
      if (mapsPublishStatus_
          != com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
              .MapsPublishStatus.UNSPECIFIED_MAPS_PUBLISH_STATUS.getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(13, mapsPublishStatus_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo)) {
        return super.equals(obj);
      }
      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo other =
          (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo) obj;

      boolean result = true;
      result = result && (hasPhotoId() == other.hasPhotoId());
      if (hasPhotoId()) {
        result = result && getPhotoId().equals(other.getPhotoId());
      }
      result = result && (hasUploadReference() == other.hasUploadReference());
      if (hasUploadReference()) {
        result = result && getUploadReference().equals(other.getUploadReference());
      }
      result = result && getDownloadUrl().equals(other.getDownloadUrl());
      result = result && getThumbnailUrl().equals(other.getThumbnailUrl());
      result = result && getShareLink().equals(other.getShareLink());
      result = result && (hasPose() == other.hasPose());
      if (hasPose()) {
        result = result && getPose().equals(other.getPose());
      }
      result = result && getConnectionsList().equals(other.getConnectionsList());
      result = result && (hasCaptureTime() == other.hasCaptureTime());
      if (hasCaptureTime()) {
        result = result && getCaptureTime().equals(other.getCaptureTime());
      }
      result = result && getPlacesList().equals(other.getPlacesList());
      result = result && (getViewCount() == other.getViewCount());
      result = result && transferStatus_ == other.transferStatus_;
      result = result && mapsPublishStatus_ == other.mapsPublishStatus_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPhotoId()) {
        hash = (37 * hash) + PHOTO_ID_FIELD_NUMBER;
        hash = (53 * hash) + getPhotoId().hashCode();
      }
      if (hasUploadReference()) {
        hash = (37 * hash) + UPLOAD_REFERENCE_FIELD_NUMBER;
        hash = (53 * hash) + getUploadReference().hashCode();
      }
      hash = (37 * hash) + DOWNLOAD_URL_FIELD_NUMBER;
      hash = (53 * hash) + getDownloadUrl().hashCode();
      hash = (37 * hash) + THUMBNAIL_URL_FIELD_NUMBER;
      hash = (53 * hash) + getThumbnailUrl().hashCode();
      hash = (37 * hash) + SHARE_LINK_FIELD_NUMBER;
      hash = (53 * hash) + getShareLink().hashCode();
      if (hasPose()) {
        hash = (37 * hash) + POSE_FIELD_NUMBER;
        hash = (53 * hash) + getPose().hashCode();
      }
      if (getConnectionsCount() > 0) {
        hash = (37 * hash) + CONNECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getConnectionsList().hashCode();
      }
      if (hasCaptureTime()) {
        hash = (37 * hash) + CAPTURE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getCaptureTime().hashCode();
      }
      if (getPlacesCount() > 0) {
        hash = (37 * hash) + PLACES_FIELD_NUMBER;
        hash = (53 * hash) + getPlacesList().hashCode();
      }
      hash = (37 * hash) + VIEW_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getViewCount());
      hash = (37 * hash) + TRANSFER_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + transferStatus_;
      hash = (37 * hash) + MAPS_PUBLISH_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + mapsPublishStatus_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Photo is used to store 360 photos along with photo metadata.
     * </pre>
     *
     * Protobuf type {@code google.streetview.publish.v1.Photo}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.streetview.publish.v1.Photo)
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_Photo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_Photo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.class,
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.Builder
                    .class);
      }

      // Construct using
      // com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getConnectionsFieldBuilder();
          getPlacesFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (photoIdBuilder_ == null) {
          photoId_ = null;
        } else {
          photoId_ = null;
          photoIdBuilder_ = null;
        }
        if (uploadReferenceBuilder_ == null) {
          uploadReference_ = null;
        } else {
          uploadReference_ = null;
          uploadReferenceBuilder_ = null;
        }
        downloadUrl_ = "";

        thumbnailUrl_ = "";

        shareLink_ = "";

        if (poseBuilder_ == null) {
          pose_ = null;
        } else {
          pose_ = null;
          poseBuilder_ = null;
        }
        if (connectionsBuilder_ == null) {
          connections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          connectionsBuilder_.clear();
        }
        if (captureTimeBuilder_ == null) {
          captureTime_ = null;
        } else {
          captureTime_ = null;
          captureTimeBuilder_ = null;
        }
        if (placesBuilder_ == null) {
          places_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          placesBuilder_.clear();
        }
        viewCount_ = 0L;

        transferStatus_ = 0;

        mapsPublishStatus_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
            .internal_static_google_streetview_publish_v1_Photo_descriptor;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
          getDefaultInstanceForType() {
        return com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo build() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
          buildPartial() {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo result =
            new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (photoIdBuilder_ == null) {
          result.photoId_ = photoId_;
        } else {
          result.photoId_ = photoIdBuilder_.build();
        }
        if (uploadReferenceBuilder_ == null) {
          result.uploadReference_ = uploadReference_;
        } else {
          result.uploadReference_ = uploadReferenceBuilder_.build();
        }
        result.downloadUrl_ = downloadUrl_;
        result.thumbnailUrl_ = thumbnailUrl_;
        result.shareLink_ = shareLink_;
        if (poseBuilder_ == null) {
          result.pose_ = pose_;
        } else {
          result.pose_ = poseBuilder_.build();
        }
        if (connectionsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            connections_ = java.util.Collections.unmodifiableList(connections_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.connections_ = connections_;
        } else {
          result.connections_ = connectionsBuilder_.build();
        }
        if (captureTimeBuilder_ == null) {
          result.captureTime_ = captureTime_;
        } else {
          result.captureTime_ = captureTimeBuilder_.build();
        }
        if (placesBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            places_ = java.util.Collections.unmodifiableList(places_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.places_ = places_;
        } else {
          result.places_ = placesBuilder_.build();
        }
        result.viewCount_ = viewCount_;
        result.transferStatus_ = transferStatus_;
        result.mapsPublishStatus_ = mapsPublishStatus_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo) {
          return mergeFrom(
              (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo other) {
        if (other
            == com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
                .getDefaultInstance()) return this;
        if (other.hasPhotoId()) {
          mergePhotoId(other.getPhotoId());
        }
        if (other.hasUploadReference()) {
          mergeUploadReference(other.getUploadReference());
        }
        if (!other.getDownloadUrl().isEmpty()) {
          downloadUrl_ = other.downloadUrl_;
          onChanged();
        }
        if (!other.getThumbnailUrl().isEmpty()) {
          thumbnailUrl_ = other.thumbnailUrl_;
          onChanged();
        }
        if (!other.getShareLink().isEmpty()) {
          shareLink_ = other.shareLink_;
          onChanged();
        }
        if (other.hasPose()) {
          mergePose(other.getPose());
        }
        if (connectionsBuilder_ == null) {
          if (!other.connections_.isEmpty()) {
            if (connections_.isEmpty()) {
              connections_ = other.connections_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureConnectionsIsMutable();
              connections_.addAll(other.connections_);
            }
            onChanged();
          }
        } else {
          if (!other.connections_.isEmpty()) {
            if (connectionsBuilder_.isEmpty()) {
              connectionsBuilder_.dispose();
              connectionsBuilder_ = null;
              connections_ = other.connections_;
              bitField0_ = (bitField0_ & ~0x00000040);
              connectionsBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getConnectionsFieldBuilder()
                      : null;
            } else {
              connectionsBuilder_.addAllMessages(other.connections_);
            }
          }
        }
        if (other.hasCaptureTime()) {
          mergeCaptureTime(other.getCaptureTime());
        }
        if (placesBuilder_ == null) {
          if (!other.places_.isEmpty()) {
            if (places_.isEmpty()) {
              places_ = other.places_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensurePlacesIsMutable();
              places_.addAll(other.places_);
            }
            onChanged();
          }
        } else {
          if (!other.places_.isEmpty()) {
            if (placesBuilder_.isEmpty()) {
              placesBuilder_.dispose();
              placesBuilder_ = null;
              places_ = other.places_;
              bitField0_ = (bitField0_ & ~0x00000100);
              placesBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getPlacesFieldBuilder()
                      : null;
            } else {
              placesBuilder_.addAllMessages(other.places_);
            }
          }
        }
        if (other.getViewCount() != 0L) {
          setViewCount(other.getViewCount());
        }
        if (other.transferStatus_ != 0) {
          setTransferStatusValue(other.getTransferStatusValue());
        }
        if (other.mapsPublishStatus_ != 0) {
          setMapsPublishStatusValue(other.getMapsPublishStatusValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo parsedMessage =
            null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo)
                  e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int bitField0_;

      private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId photoId_ =
          null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId.Builder,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoIdOrBuilder>
          photoIdBuilder_;
      /**
       *
       *
       * <pre>
       * Required when updating a photo. Output only when creating a photo.
       * Identifier for the photo, which is unique among all photos in
       * Google.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId photo_id = 1;</code>
       */
      public boolean hasPhotoId() {
        return photoIdBuilder_ != null || photoId_ != null;
      }
      /**
       *
       *
       * <pre>
       * Required when updating a photo. Output only when creating a photo.
       * Identifier for the photo, which is unique among all photos in
       * Google.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId photo_id = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
          getPhotoId() {
        if (photoIdBuilder_ == null) {
          return photoId_ == null
              ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
                  .getDefaultInstance()
              : photoId_;
        } else {
          return photoIdBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Required when updating a photo. Output only when creating a photo.
       * Identifier for the photo, which is unique among all photos in
       * Google.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId photo_id = 1;</code>
       */
      public Builder setPhotoId(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId value) {
        if (photoIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          photoId_ = value;
          onChanged();
        } else {
          photoIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Required when updating a photo. Output only when creating a photo.
       * Identifier for the photo, which is unique among all photos in
       * Google.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId photo_id = 1;</code>
       */
      public Builder setPhotoId(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId.Builder
              builderForValue) {
        if (photoIdBuilder_ == null) {
          photoId_ = builderForValue.build();
          onChanged();
        } else {
          photoIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Required when updating a photo. Output only when creating a photo.
       * Identifier for the photo, which is unique among all photos in
       * Google.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId photo_id = 1;</code>
       */
      public Builder mergePhotoId(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId value) {
        if (photoIdBuilder_ == null) {
          if (photoId_ != null) {
            photoId_ =
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
                    .newBuilder(photoId_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            photoId_ = value;
          }
          onChanged();
        } else {
          photoIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Required when updating a photo. Output only when creating a photo.
       * Identifier for the photo, which is unique among all photos in
       * Google.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId photo_id = 1;</code>
       */
      public Builder clearPhotoId() {
        if (photoIdBuilder_ == null) {
          photoId_ = null;
          onChanged();
        } else {
          photoId_ = null;
          photoIdBuilder_ = null;
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Required when updating a photo. Output only when creating a photo.
       * Identifier for the photo, which is unique among all photos in
       * Google.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId photo_id = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId.Builder
          getPhotoIdBuilder() {

        onChanged();
        return getPhotoIdFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Required when updating a photo. Output only when creating a photo.
       * Identifier for the photo, which is unique among all photos in
       * Google.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId photo_id = 1;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoIdOrBuilder
          getPhotoIdOrBuilder() {
        if (photoIdBuilder_ != null) {
          return photoIdBuilder_.getMessageOrBuilder();
        } else {
          return photoId_ == null
              ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
                  .getDefaultInstance()
              : photoId_;
        }
      }
      /**
       *
       *
       * <pre>
       * Required when updating a photo. Output only when creating a photo.
       * Identifier for the photo, which is unique among all photos in
       * Google.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.PhotoId photo_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId.Builder,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoIdOrBuilder>
          getPhotoIdFieldBuilder() {
        if (photoIdBuilder_ == null) {
          photoIdBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId,
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PhotoId
                      .Builder,
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                      .PhotoIdOrBuilder>(getPhotoId(), getParentForChildren(), isClean());
          photoId_ = null;
        }
        return photoIdBuilder_;
      }

      private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
          uploadReference_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef.Builder,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                  .UploadRefOrBuilder>
          uploadReferenceBuilder_;
      /**
       *
       *
       * <pre>
       * Required when creating a photo. Input only. The resource URL where the
       * photo bytes are uploaded to.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.UploadRef upload_reference = 2;</code>
       */
      public boolean hasUploadReference() {
        return uploadReferenceBuilder_ != null || uploadReference_ != null;
      }
      /**
       *
       *
       * <pre>
       * Required when creating a photo. Input only. The resource URL where the
       * photo bytes are uploaded to.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.UploadRef upload_reference = 2;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
          getUploadReference() {
        if (uploadReferenceBuilder_ == null) {
          return uploadReference_ == null
              ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
                  .getDefaultInstance()
              : uploadReference_;
        } else {
          return uploadReferenceBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Required when creating a photo. Input only. The resource URL where the
       * photo bytes are uploaded to.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.UploadRef upload_reference = 2;</code>
       */
      public Builder setUploadReference(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef value) {
        if (uploadReferenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          uploadReference_ = value;
          onChanged();
        } else {
          uploadReferenceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Required when creating a photo. Input only. The resource URL where the
       * photo bytes are uploaded to.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.UploadRef upload_reference = 2;</code>
       */
      public Builder setUploadReference(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef.Builder
              builderForValue) {
        if (uploadReferenceBuilder_ == null) {
          uploadReference_ = builderForValue.build();
          onChanged();
        } else {
          uploadReferenceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Required when creating a photo. Input only. The resource URL where the
       * photo bytes are uploaded to.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.UploadRef upload_reference = 2;</code>
       */
      public Builder mergeUploadReference(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef value) {
        if (uploadReferenceBuilder_ == null) {
          if (uploadReference_ != null) {
            uploadReference_ =
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
                    .newBuilder(uploadReference_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            uploadReference_ = value;
          }
          onChanged();
        } else {
          uploadReferenceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Required when creating a photo. Input only. The resource URL where the
       * photo bytes are uploaded to.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.UploadRef upload_reference = 2;</code>
       */
      public Builder clearUploadReference() {
        if (uploadReferenceBuilder_ == null) {
          uploadReference_ = null;
          onChanged();
        } else {
          uploadReference_ = null;
          uploadReferenceBuilder_ = null;
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Required when creating a photo. Input only. The resource URL where the
       * photo bytes are uploaded to.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.UploadRef upload_reference = 2;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef.Builder
          getUploadReferenceBuilder() {

        onChanged();
        return getUploadReferenceFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Required when creating a photo. Input only. The resource URL where the
       * photo bytes are uploaded to.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.UploadRef upload_reference = 2;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRefOrBuilder
          getUploadReferenceOrBuilder() {
        if (uploadReferenceBuilder_ != null) {
          return uploadReferenceBuilder_.getMessageOrBuilder();
        } else {
          return uploadReference_ == null
              ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
                  .getDefaultInstance()
              : uploadReference_;
        }
      }
      /**
       *
       *
       * <pre>
       * Required when creating a photo. Input only. The resource URL where the
       * photo bytes are uploaded to.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.UploadRef upload_reference = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef.Builder,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                  .UploadRefOrBuilder>
          getUploadReferenceFieldBuilder() {
        if (uploadReferenceBuilder_ == null) {
          uploadReferenceBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef,
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.UploadRef
                      .Builder,
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                      .UploadRefOrBuilder>(getUploadReference(), getParentForChildren(), isClean());
          uploadReference_ = null;
        }
        return uploadReferenceBuilder_;
      }

      private java.lang.Object downloadUrl_ = "";
      /**
       *
       *
       * <pre>
       * Output only. The download URL for the photo bytes. This field is set only
       * when
       * [GetPhotoRequest.view][google.streetview.publish.v1.GetPhotoRequest.view]
       * is set to
       * [PhotoView.INCLUDE_DOWNLOAD_URL][google.streetview.publish.v1.PhotoView.INCLUDE_DOWNLOAD_URL].
       * </pre>
       *
       * <code>string download_url = 3;</code>
       */
      public java.lang.String getDownloadUrl() {
        java.lang.Object ref = downloadUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          downloadUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Output only. The download URL for the photo bytes. This field is set only
       * when
       * [GetPhotoRequest.view][google.streetview.publish.v1.GetPhotoRequest.view]
       * is set to
       * [PhotoView.INCLUDE_DOWNLOAD_URL][google.streetview.publish.v1.PhotoView.INCLUDE_DOWNLOAD_URL].
       * </pre>
       *
       * <code>string download_url = 3;</code>
       */
      public com.google.protobuf.ByteString getDownloadUrlBytes() {
        java.lang.Object ref = downloadUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          downloadUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Output only. The download URL for the photo bytes. This field is set only
       * when
       * [GetPhotoRequest.view][google.streetview.publish.v1.GetPhotoRequest.view]
       * is set to
       * [PhotoView.INCLUDE_DOWNLOAD_URL][google.streetview.publish.v1.PhotoView.INCLUDE_DOWNLOAD_URL].
       * </pre>
       *
       * <code>string download_url = 3;</code>
       */
      public Builder setDownloadUrl(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        downloadUrl_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. The download URL for the photo bytes. This field is set only
       * when
       * [GetPhotoRequest.view][google.streetview.publish.v1.GetPhotoRequest.view]
       * is set to
       * [PhotoView.INCLUDE_DOWNLOAD_URL][google.streetview.publish.v1.PhotoView.INCLUDE_DOWNLOAD_URL].
       * </pre>
       *
       * <code>string download_url = 3;</code>
       */
      public Builder clearDownloadUrl() {

        downloadUrl_ = getDefaultInstance().getDownloadUrl();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. The download URL for the photo bytes. This field is set only
       * when
       * [GetPhotoRequest.view][google.streetview.publish.v1.GetPhotoRequest.view]
       * is set to
       * [PhotoView.INCLUDE_DOWNLOAD_URL][google.streetview.publish.v1.PhotoView.INCLUDE_DOWNLOAD_URL].
       * </pre>
       *
       * <code>string download_url = 3;</code>
       */
      public Builder setDownloadUrlBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        downloadUrl_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object thumbnailUrl_ = "";
      /**
       *
       *
       * <pre>
       * Output only. The thumbnail URL for showing a preview of the given photo.
       * </pre>
       *
       * <code>string thumbnail_url = 9;</code>
       */
      public java.lang.String getThumbnailUrl() {
        java.lang.Object ref = thumbnailUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          thumbnailUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Output only. The thumbnail URL for showing a preview of the given photo.
       * </pre>
       *
       * <code>string thumbnail_url = 9;</code>
       */
      public com.google.protobuf.ByteString getThumbnailUrlBytes() {
        java.lang.Object ref = thumbnailUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          thumbnailUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Output only. The thumbnail URL for showing a preview of the given photo.
       * </pre>
       *
       * <code>string thumbnail_url = 9;</code>
       */
      public Builder setThumbnailUrl(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        thumbnailUrl_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. The thumbnail URL for showing a preview of the given photo.
       * </pre>
       *
       * <code>string thumbnail_url = 9;</code>
       */
      public Builder clearThumbnailUrl() {

        thumbnailUrl_ = getDefaultInstance().getThumbnailUrl();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. The thumbnail URL for showing a preview of the given photo.
       * </pre>
       *
       * <code>string thumbnail_url = 9;</code>
       */
      public Builder setThumbnailUrlBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        thumbnailUrl_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object shareLink_ = "";
      /**
       *
       *
       * <pre>
       * Output only. The share link for the photo.
       * </pre>
       *
       * <code>string share_link = 11;</code>
       */
      public java.lang.String getShareLink() {
        java.lang.Object ref = shareLink_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          shareLink_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Output only. The share link for the photo.
       * </pre>
       *
       * <code>string share_link = 11;</code>
       */
      public com.google.protobuf.ByteString getShareLinkBytes() {
        java.lang.Object ref = shareLink_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          shareLink_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Output only. The share link for the photo.
       * </pre>
       *
       * <code>string share_link = 11;</code>
       */
      public Builder setShareLink(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        shareLink_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. The share link for the photo.
       * </pre>
       *
       * <code>string share_link = 11;</code>
       */
      public Builder clearShareLink() {

        shareLink_ = getDefaultInstance().getShareLink();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. The share link for the photo.
       * </pre>
       *
       * <code>string share_link = 11;</code>
       */
      public Builder setShareLinkBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        shareLink_ = value;
        onChanged();
        return this;
      }

      private com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose pose_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose.Builder,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PoseOrBuilder>
          poseBuilder_;
      /**
       *
       *
       * <pre>
       * Pose of the photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Pose pose = 4;</code>
       */
      public boolean hasPose() {
        return poseBuilder_ != null || pose_ != null;
      }
      /**
       *
       *
       * <pre>
       * Pose of the photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Pose pose = 4;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose getPose() {
        if (poseBuilder_ == null) {
          return pose_ == null
              ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
                  .getDefaultInstance()
              : pose_;
        } else {
          return poseBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Pose of the photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Pose pose = 4;</code>
       */
      public Builder setPose(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose value) {
        if (poseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pose_ = value;
          onChanged();
        } else {
          poseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Pose of the photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Pose pose = 4;</code>
       */
      public Builder setPose(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose.Builder
              builderForValue) {
        if (poseBuilder_ == null) {
          pose_ = builderForValue.build();
          onChanged();
        } else {
          poseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Pose of the photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Pose pose = 4;</code>
       */
      public Builder mergePose(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose value) {
        if (poseBuilder_ == null) {
          if (pose_ != null) {
            pose_ =
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose.newBuilder(
                        pose_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            pose_ = value;
          }
          onChanged();
        } else {
          poseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Pose of the photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Pose pose = 4;</code>
       */
      public Builder clearPose() {
        if (poseBuilder_ == null) {
          pose_ = null;
          onChanged();
        } else {
          pose_ = null;
          poseBuilder_ = null;
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Pose of the photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Pose pose = 4;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose.Builder
          getPoseBuilder() {

        onChanged();
        return getPoseFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Pose of the photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Pose pose = 4;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PoseOrBuilder
          getPoseOrBuilder() {
        if (poseBuilder_ != null) {
          return poseBuilder_.getMessageOrBuilder();
        } else {
          return pose_ == null
              ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose
                  .getDefaultInstance()
              : pose_;
        }
      }
      /**
       *
       *
       * <pre>
       * Pose of the photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Pose pose = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose.Builder,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PoseOrBuilder>
          getPoseFieldBuilder() {
        if (poseBuilder_ == null) {
          poseBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose,
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Pose.Builder,
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                      .PoseOrBuilder>(getPose(), getParentForChildren(), isClean());
          pose_ = null;
        }
        return poseBuilder_;
      }

      private java.util.List<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection>
          connections_ = java.util.Collections.emptyList();

      private void ensureConnectionsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          connections_ =
              new java.util.ArrayList<
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection>(
                  connections_);
          bitField0_ |= 0x00000040;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
                  .Builder,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                  .ConnectionOrBuilder>
          connectionsBuilder_;

      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public java.util.List<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection>
          getConnectionsList() {
        if (connectionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(connections_);
        } else {
          return connectionsBuilder_.getMessageList();
        }
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public int getConnectionsCount() {
        if (connectionsBuilder_ == null) {
          return connections_.size();
        } else {
          return connectionsBuilder_.getCount();
        }
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
          getConnections(int index) {
        if (connectionsBuilder_ == null) {
          return connections_.get(index);
        } else {
          return connectionsBuilder_.getMessage(index);
        }
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public Builder setConnections(
          int index,
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection value) {
        if (connectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConnectionsIsMutable();
          connections_.set(index, value);
          onChanged();
        } else {
          connectionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public Builder setConnections(
          int index,
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection.Builder
              builderForValue) {
        if (connectionsBuilder_ == null) {
          ensureConnectionsIsMutable();
          connections_.set(index, builderForValue.build());
          onChanged();
        } else {
          connectionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public Builder addConnections(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection value) {
        if (connectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConnectionsIsMutable();
          connections_.add(value);
          onChanged();
        } else {
          connectionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public Builder addConnections(
          int index,
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection value) {
        if (connectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConnectionsIsMutable();
          connections_.add(index, value);
          onChanged();
        } else {
          connectionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public Builder addConnections(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection.Builder
              builderForValue) {
        if (connectionsBuilder_ == null) {
          ensureConnectionsIsMutable();
          connections_.add(builderForValue.build());
          onChanged();
        } else {
          connectionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public Builder addConnections(
          int index,
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection.Builder
              builderForValue) {
        if (connectionsBuilder_ == null) {
          ensureConnectionsIsMutable();
          connections_.add(index, builderForValue.build());
          onChanged();
        } else {
          connectionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public Builder addAllConnections(
          java.lang.Iterable<
                  ? extends
                      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                          .Connection>
              values) {
        if (connectionsBuilder_ == null) {
          ensureConnectionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, connections_);
          onChanged();
        } else {
          connectionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public Builder clearConnections() {
        if (connectionsBuilder_ == null) {
          connections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          connectionsBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public Builder removeConnections(int index) {
        if (connectionsBuilder_ == null) {
          ensureConnectionsIsMutable();
          connections_.remove(index);
          onChanged();
        } else {
          connectionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection.Builder
          getConnectionsBuilder(int index) {
        return getConnectionsFieldBuilder().getBuilder(index);
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.ConnectionOrBuilder
          getConnectionsOrBuilder(int index) {
        if (connectionsBuilder_ == null) {
          return connections_.get(index);
        } else {
          return connectionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public java.util.List<
              ? extends
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                      .ConnectionOrBuilder>
          getConnectionsOrBuilderList() {
        if (connectionsBuilder_ != null) {
          return connectionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(connections_);
        }
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection.Builder
          addConnectionsBuilder() {
        return getConnectionsFieldBuilder()
            .addBuilder(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
                    .getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection.Builder
          addConnectionsBuilder(int index) {
        return getConnectionsFieldBuilder()
            .addBuilder(
                index,
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
                    .getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * Connections to other photos. A connection represents the link from this
       * photo to another photo.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Connection connections = 5;</code>
       */
      public java.util.List<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
                  .Builder>
          getConnectionsBuilderList() {
        return getConnectionsFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
                  .Builder,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                  .ConnectionOrBuilder>
          getConnectionsFieldBuilder() {
        if (connectionsBuilder_ == null) {
          connectionsBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection,
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Connection
                      .Builder,
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                      .ConnectionOrBuilder>(
                  connections_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          connections_ = null;
        }
        return connectionsBuilder_;
      }

      private com.google.protobuf.Timestamp captureTime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp,
              com.google.protobuf.Timestamp.Builder,
              com.google.protobuf.TimestampOrBuilder>
          captureTimeBuilder_;
      /**
       *
       *
       * <pre>
       * Absolute time when the photo was captured.
       * When the photo has no exif timestamp, this is used to set a timestamp in
       * the photo metadata.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp capture_time = 6;</code>
       */
      public boolean hasCaptureTime() {
        return captureTimeBuilder_ != null || captureTime_ != null;
      }
      /**
       *
       *
       * <pre>
       * Absolute time when the photo was captured.
       * When the photo has no exif timestamp, this is used to set a timestamp in
       * the photo metadata.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp capture_time = 6;</code>
       */
      public com.google.protobuf.Timestamp getCaptureTime() {
        if (captureTimeBuilder_ == null) {
          return captureTime_ == null
              ? com.google.protobuf.Timestamp.getDefaultInstance()
              : captureTime_;
        } else {
          return captureTimeBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Absolute time when the photo was captured.
       * When the photo has no exif timestamp, this is used to set a timestamp in
       * the photo metadata.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp capture_time = 6;</code>
       */
      public Builder setCaptureTime(com.google.protobuf.Timestamp value) {
        if (captureTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          captureTime_ = value;
          onChanged();
        } else {
          captureTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Absolute time when the photo was captured.
       * When the photo has no exif timestamp, this is used to set a timestamp in
       * the photo metadata.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp capture_time = 6;</code>
       */
      public Builder setCaptureTime(com.google.protobuf.Timestamp.Builder builderForValue) {
        if (captureTimeBuilder_ == null) {
          captureTime_ = builderForValue.build();
          onChanged();
        } else {
          captureTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Absolute time when the photo was captured.
       * When the photo has no exif timestamp, this is used to set a timestamp in
       * the photo metadata.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp capture_time = 6;</code>
       */
      public Builder mergeCaptureTime(com.google.protobuf.Timestamp value) {
        if (captureTimeBuilder_ == null) {
          if (captureTime_ != null) {
            captureTime_ =
                com.google.protobuf.Timestamp.newBuilder(captureTime_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            captureTime_ = value;
          }
          onChanged();
        } else {
          captureTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Absolute time when the photo was captured.
       * When the photo has no exif timestamp, this is used to set a timestamp in
       * the photo metadata.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp capture_time = 6;</code>
       */
      public Builder clearCaptureTime() {
        if (captureTimeBuilder_ == null) {
          captureTime_ = null;
          onChanged();
        } else {
          captureTime_ = null;
          captureTimeBuilder_ = null;
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Absolute time when the photo was captured.
       * When the photo has no exif timestamp, this is used to set a timestamp in
       * the photo metadata.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp capture_time = 6;</code>
       */
      public com.google.protobuf.Timestamp.Builder getCaptureTimeBuilder() {

        onChanged();
        return getCaptureTimeFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Absolute time when the photo was captured.
       * When the photo has no exif timestamp, this is used to set a timestamp in
       * the photo metadata.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp capture_time = 6;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getCaptureTimeOrBuilder() {
        if (captureTimeBuilder_ != null) {
          return captureTimeBuilder_.getMessageOrBuilder();
        } else {
          return captureTime_ == null
              ? com.google.protobuf.Timestamp.getDefaultInstance()
              : captureTime_;
        }
      }
      /**
       *
       *
       * <pre>
       * Absolute time when the photo was captured.
       * When the photo has no exif timestamp, this is used to set a timestamp in
       * the photo metadata.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp capture_time = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp,
              com.google.protobuf.Timestamp.Builder,
              com.google.protobuf.TimestampOrBuilder>
          getCaptureTimeFieldBuilder() {
        if (captureTimeBuilder_ == null) {
          captureTimeBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Timestamp,
                  com.google.protobuf.Timestamp.Builder,
                  com.google.protobuf.TimestampOrBuilder>(
                  getCaptureTime(), getParentForChildren(), isClean());
          captureTime_ = null;
        }
        return captureTimeBuilder_;
      }

      private java.util.List<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place>
          places_ = java.util.Collections.emptyList();

      private void ensurePlacesIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          places_ =
              new java.util.ArrayList<
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place>(
                  places_);
          bitField0_ |= 0x00000100;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place.Builder,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PlaceOrBuilder>
          placesBuilder_;

      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public java.util.List<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place>
          getPlacesList() {
        if (placesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(places_);
        } else {
          return placesBuilder_.getMessageList();
        }
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public int getPlacesCount() {
        if (placesBuilder_ == null) {
          return places_.size();
        } else {
          return placesBuilder_.getCount();
        }
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place getPlaces(
          int index) {
        if (placesBuilder_ == null) {
          return places_.get(index);
        } else {
          return placesBuilder_.getMessage(index);
        }
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public Builder setPlaces(
          int index,
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place value) {
        if (placesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlacesIsMutable();
          places_.set(index, value);
          onChanged();
        } else {
          placesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public Builder setPlaces(
          int index,
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place.Builder
              builderForValue) {
        if (placesBuilder_ == null) {
          ensurePlacesIsMutable();
          places_.set(index, builderForValue.build());
          onChanged();
        } else {
          placesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public Builder addPlaces(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place value) {
        if (placesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlacesIsMutable();
          places_.add(value);
          onChanged();
        } else {
          placesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public Builder addPlaces(
          int index,
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place value) {
        if (placesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlacesIsMutable();
          places_.add(index, value);
          onChanged();
        } else {
          placesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public Builder addPlaces(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place.Builder
              builderForValue) {
        if (placesBuilder_ == null) {
          ensurePlacesIsMutable();
          places_.add(builderForValue.build());
          onChanged();
        } else {
          placesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public Builder addPlaces(
          int index,
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place.Builder
              builderForValue) {
        if (placesBuilder_ == null) {
          ensurePlacesIsMutable();
          places_.add(index, builderForValue.build());
          onChanged();
        } else {
          placesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public Builder addAllPlaces(
          java.lang.Iterable<
                  ? extends
                      com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place>
              values) {
        if (placesBuilder_ == null) {
          ensurePlacesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, places_);
          onChanged();
        } else {
          placesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public Builder clearPlaces() {
        if (placesBuilder_ == null) {
          places_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          placesBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public Builder removePlaces(int index) {
        if (placesBuilder_ == null) {
          ensurePlacesIsMutable();
          places_.remove(index);
          onChanged();
        } else {
          placesBuilder_.remove(index);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place.Builder
          getPlacesBuilder(int index) {
        return getPlacesFieldBuilder().getBuilder(index);
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PlaceOrBuilder
          getPlacesOrBuilder(int index) {
        if (placesBuilder_ == null) {
          return places_.get(index);
        } else {
          return placesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public java.util.List<
              ? extends
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                      .PlaceOrBuilder>
          getPlacesOrBuilderList() {
        if (placesBuilder_ != null) {
          return placesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(places_);
        }
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place.Builder
          addPlacesBuilder() {
        return getPlacesFieldBuilder()
            .addBuilder(
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
                    .getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place.Builder
          addPlacesBuilder(int index) {
        return getPlacesFieldBuilder()
            .addBuilder(
                index,
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place
                    .getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * Places where this photo belongs.
       * </pre>
       *
       * <code>repeated .google.streetview.publish.v1.Place places = 7;</code>
       */
      public java.util.List<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place.Builder>
          getPlacesBuilderList() {
        return getPlacesFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place.Builder,
              com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.PlaceOrBuilder>
          getPlacesFieldBuilder() {
        if (placesBuilder_ == null) {
          placesBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place,
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Place.Builder,
                  com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources
                      .PlaceOrBuilder>(
                  places_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          places_ = null;
        }
        return placesBuilder_;
      }

      private long viewCount_;
      /**
       *
       *
       * <pre>
       * Output only. View count of the photo.
       * </pre>
       *
       * <code>int64 view_count = 10;</code>
       */
      public long getViewCount() {
        return viewCount_;
      }
      /**
       *
       *
       * <pre>
       * Output only. View count of the photo.
       * </pre>
       *
       * <code>int64 view_count = 10;</code>
       */
      public Builder setViewCount(long value) {

        viewCount_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. View count of the photo.
       * </pre>
       *
       * <code>int64 view_count = 10;</code>
       */
      public Builder clearViewCount() {

        viewCount_ = 0L;
        onChanged();
        return this;
      }

      private int transferStatus_ = 0;
      /**
       *
       *
       * <pre>
       * Output only. Status of rights transfer on this photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo.TransferStatus transfer_status = 12;</code>
       */
      public int getTransferStatusValue() {
        return transferStatus_;
      }
      /**
       *
       *
       * <pre>
       * Output only. Status of rights transfer on this photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo.TransferStatus transfer_status = 12;</code>
       */
      public Builder setTransferStatusValue(int value) {
        transferStatus_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. Status of rights transfer on this photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo.TransferStatus transfer_status = 12;</code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
              .TransferStatus
          getTransferStatus() {
        @SuppressWarnings("deprecation")
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.TransferStatus
            result =
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
                    .TransferStatus.valueOf(transferStatus_);
        return result == null
            ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
                .TransferStatus.UNRECOGNIZED
            : result;
      }
      /**
       *
       *
       * <pre>
       * Output only. Status of rights transfer on this photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo.TransferStatus transfer_status = 12;</code>
       */
      public Builder setTransferStatus(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.TransferStatus
              value) {
        if (value == null) {
          throw new NullPointerException();
        }

        transferStatus_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. Status of rights transfer on this photo.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo.TransferStatus transfer_status = 12;</code>
       */
      public Builder clearTransferStatus() {

        transferStatus_ = 0;
        onChanged();
        return this;
      }

      private int mapsPublishStatus_ = 0;
      /**
       *
       *
       * <pre>
       * Output only. Status in Google Maps, whether this photo was published or
       * rejected.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo.MapsPublishStatus maps_publish_status = 13;
       * </code>
       */
      public int getMapsPublishStatusValue() {
        return mapsPublishStatus_;
      }
      /**
       *
       *
       * <pre>
       * Output only. Status in Google Maps, whether this photo was published or
       * rejected.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo.MapsPublishStatus maps_publish_status = 13;
       * </code>
       */
      public Builder setMapsPublishStatusValue(int value) {
        mapsPublishStatus_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. Status in Google Maps, whether this photo was published or
       * rejected.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo.MapsPublishStatus maps_publish_status = 13;
       * </code>
       */
      public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
              .MapsPublishStatus
          getMapsPublishStatus() {
        @SuppressWarnings("deprecation")
        com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo.MapsPublishStatus
            result =
                com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
                    .MapsPublishStatus.valueOf(mapsPublishStatus_);
        return result == null
            ? com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
                .MapsPublishStatus.UNRECOGNIZED
            : result;
      }
      /**
       *
       *
       * <pre>
       * Output only. Status in Google Maps, whether this photo was published or
       * rejected.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo.MapsPublishStatus maps_publish_status = 13;
       * </code>
       */
      public Builder setMapsPublishStatus(
          com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
                  .MapsPublishStatus
              value) {
        if (value == null) {
          throw new NullPointerException();
        }

        mapsPublishStatus_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. Status in Google Maps, whether this photo was published or
       * rejected.
       * </pre>
       *
       * <code>.google.streetview.publish.v1.Photo.MapsPublishStatus maps_publish_status = 13;
       * </code>
       */
      public Builder clearMapsPublishStatus() {

        mapsPublishStatus_ = 0;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.streetview.publish.v1.Photo)
    }

    // @@protoc_insertion_point(class_scope:google.streetview.publish.v1.Photo)
    private static final com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo();
    }

    public static com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Photo> PARSER =
        new com.google.protobuf.AbstractParser<Photo>() {
          @java.lang.Override
          public Photo parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Photo(input, extensionRegistry);
          }
        };

    public static com.google.protobuf.Parser<Photo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Photo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.geo.ugc.streetview.publish.v1.StreetViewPublishResources.Photo
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_streetview_publish_v1_UploadRef_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_UploadRef_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_streetview_publish_v1_PhotoId_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_PhotoId_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_streetview_publish_v1_Level_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_Level_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_streetview_publish_v1_Pose_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_Pose_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_streetview_publish_v1_Place_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_Place_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_streetview_publish_v1_Connection_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_Connection_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_streetview_publish_v1_Photo_descriptor;
  private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_streetview_publish_v1_Photo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

  static {
    java.lang.String[] descriptorData = {
      "\n,google/streetview/publish/v1/resources"
          + ".proto\022\034google.streetview.publish.v1\032\034go"
          + "ogle/api/annotations.proto\032\037google/proto"
          + "buf/timestamp.proto\032\030google/type/latlng."
          + "proto\"\037\n\tUploadRef\022\022\n\nupload_url\030\001 \001(\t\"\025"
          + "\n\007PhotoId\022\n\n\002id\030\001 \001(\t\"%\n\005Level\022\016\n\006number"
          + "\030\001 \001(\001\022\014\n\004name\030\002 \001(\t\"\276\001\n\004Pose\022)\n\014lat_lng"
          + "_pair\030\001 \001(\0132\023.google.type.LatLng\022\020\n\010alti"
          + "tude\030\002 \001(\001\022\017\n\007heading\030\003 \001(\001\022\r\n\005pitch\030\004 \001"
          + "(\001\022\014\n\004roll\030\005 \001(\001\0222\n\005level\030\007 \001(\0132#.google"
          + ".streetview.publish.v1.Level\022\027\n\017accuracy"
          + "_meters\030\t \001(\002\">\n\005Place\022\020\n\010place_id\030\001 \001(\t"
          + "\022\014\n\004name\030\002 \001(\t\022\025\n\rlanguage_code\030\003 \001(\t\"C\n"
          + "\nConnection\0225\n\006target\030\001 \001(\0132%.google.str"
          + "eetview.publish.v1.PhotoId\"\330\006\n\005Photo\0227\n\010"
          + "photo_id\030\001 \001(\0132%.google.streetview.publi"
          + "sh.v1.PhotoId\022A\n\020upload_reference\030\002 \001(\0132"
          + "\'.google.streetview.publish.v1.UploadRef"
          + "\022\024\n\014download_url\030\003 \001(\t\022\025\n\rthumbnail_url\030"
          + "\t \001(\t\022\022\n\nshare_link\030\013 \001(\t\0220\n\004pose\030\004 \001(\0132"
          + "\".google.streetview.publish.v1.Pose\022=\n\013c"
          + "onnections\030\005 \003(\0132(.google.streetview.pub"
          + "lish.v1.Connection\0220\n\014capture_time\030\006 \001(\013"
          + "2\032.google.protobuf.Timestamp\0223\n\006places\030\007"
          + " \003(\0132#.google.streetview.publish.v1.Plac"
          + "e\022\022\n\nview_count\030\n \001(\003\022K\n\017transfer_status"
          + "\030\014 \001(\01622.google.streetview.publish.v1.Ph"
          + "oto.TransferStatus\022R\n\023maps_publish_statu"
          + "s\030\r \001(\01625.google.streetview.publish.v1.P"
          + "hoto.MapsPublishStatus\"\245\001\n\016TransferStatu"
          + "s\022\033\n\027TRANSFER_STATUS_UNKNOWN\020\000\022\025\n\021NEVER_"
          + "TRANSFERRED\020\001\022\013\n\007PENDING\020\002\022\r\n\tCOMPLETED\020"
          + "\003\022\014\n\010REJECTED\020\004\022\013\n\007EXPIRED\020\005\022\r\n\tCANCELLE"
          + "D\020\006\022\031\n\025RECEIVED_VIA_TRANSFER\020\007\"]\n\021MapsPu"
          + "blishStatus\022#\n\037UNSPECIFIED_MAPS_PUBLISH_"
          + "STATUS\020\000\022\r\n\tPUBLISHED\020\001\022\024\n\020REJECTED_UNKN"
          + "OWN\020\002B\213\001\n(com.google.geo.ugc.streetview."
          + "publish.v1B\032StreetViewPublishResourcesZC"
          + "google.golang.org/genproto/googleapis/st"
          + "reetview/publish/v1;publishb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
        descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.google.type.LatLngProto.getDescriptor(),
        },
        assigner);
    internal_static_google_streetview_publish_v1_UploadRef_descriptor =
        getDescriptor().getMessageTypes().get(0);
    internal_static_google_streetview_publish_v1_UploadRef_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_streetview_publish_v1_UploadRef_descriptor,
            new java.lang.String[] {
              "UploadUrl",
            });
    internal_static_google_streetview_publish_v1_PhotoId_descriptor =
        getDescriptor().getMessageTypes().get(1);
    internal_static_google_streetview_publish_v1_PhotoId_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_streetview_publish_v1_PhotoId_descriptor,
            new java.lang.String[] {
              "Id",
            });
    internal_static_google_streetview_publish_v1_Level_descriptor =
        getDescriptor().getMessageTypes().get(2);
    internal_static_google_streetview_publish_v1_Level_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_streetview_publish_v1_Level_descriptor,
            new java.lang.String[] {
              "Number", "Name",
            });
    internal_static_google_streetview_publish_v1_Pose_descriptor =
        getDescriptor().getMessageTypes().get(3);
    internal_static_google_streetview_publish_v1_Pose_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_streetview_publish_v1_Pose_descriptor,
            new java.lang.String[] {
              "LatLngPair", "Altitude", "Heading", "Pitch", "Roll", "Level", "AccuracyMeters",
            });
    internal_static_google_streetview_publish_v1_Place_descriptor =
        getDescriptor().getMessageTypes().get(4);
    internal_static_google_streetview_publish_v1_Place_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_streetview_publish_v1_Place_descriptor,
            new java.lang.String[] {
              "PlaceId", "Name", "LanguageCode",
            });
    internal_static_google_streetview_publish_v1_Connection_descriptor =
        getDescriptor().getMessageTypes().get(5);
    internal_static_google_streetview_publish_v1_Connection_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_streetview_publish_v1_Connection_descriptor,
            new java.lang.String[] {
              "Target",
            });
    internal_static_google_streetview_publish_v1_Photo_descriptor =
        getDescriptor().getMessageTypes().get(6);
    internal_static_google_streetview_publish_v1_Photo_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_streetview_publish_v1_Photo_descriptor,
            new java.lang.String[] {
              "PhotoId",
              "UploadReference",
              "DownloadUrl",
              "ThumbnailUrl",
              "ShareLink",
              "Pose",
              "Connections",
              "CaptureTime",
              "Places",
              "ViewCount",
              "TransferStatus",
              "MapsPublishStatus",
            });
    com.google.api.AnnotationsProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.google.type.LatLngProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
